@model IEnumerable<FarmTrack.Models.DiscountVoucher>

@{
    ViewBag.Title = "Discount Vouchers";
}

<style>
    :root {
        --color-earth: #8B7355;
        --color-soil: #654321;
        --color-foliage: #4CAF50;
        --color-wheat: #F5DEB3;
        --color-hay: #DAA520;
        --color-danger: #FF6B6B;
        --color-white: #FFFFFF;
        --color-bib: #b17474;
        --border-radius: 12px;
        --card-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }

    body {
        background-color: #F9F7F4;
    }

    /* Dashboard Header */
    .dashboard-header {
        background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
        border-radius: var(--border-radius);
        padding: 30px;
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
        box-shadow: var(--card-shadow);
    }

    .dashboard-header::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 250px;
        height: 100%;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23F5DEB3" opacity="0.1"><path d="M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z"/></svg>');
        background-repeat: no-repeat;
        background-position: right center;
        background-size: 180px;
        opacity: 0.2;
    }

    .dashboard-header h1 {
        color: var(--color-white);
        font-weight: 700;
        margin-bottom: 10px;
        font-size: 2.2rem;
        display: flex;
        align-items: center;
        gap: 15px;
    }

    .dashboard-header h1 i {
        font-size: 2rem;
    }

    .dashboard-header p {
        color: var(--color-wheat);
        font-size: 1.1rem;
        margin: 0;
    }

    /* Action Buttons */
    .action-bar {
        display: flex;
        gap: 15px;
        margin-bottom: 25px;
        flex-wrap: wrap;
    }

    .btn {
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.95rem;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .btn-success {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: white;
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
    }

    .btn-success:hover {
        background: linear-gradient(135deg, #45a049, var(--color-foliage));
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
        color: white;
    }

    /* Statistics Cards */
    .stats-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        border-radius: var(--border-radius);
        padding: 25px;
        color: white;
        box-shadow: var(--card-shadow);
        transition: all 0.3s ease;
    }

    .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    }

    .stat-card.primary {
        background: linear-gradient(135deg, #3498db, #2980b9);
    }

    .stat-card.warning {
        background: linear-gradient(135deg, var(--color-hay), #f0ad4e);
    }

    .stat-card.info {
        background: linear-gradient(135deg, #17a2b8, #138496);
    }

    .stat-card.secondary {
        background: linear-gradient(135deg, #9e9e9e, #757575);
    }

    .stat-card-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .stat-card h4 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0 0 5px 0;
    }

    .stat-card p {
        margin: 0;
        font-size: 1rem;
        opacity: 0.95;
    }

    .stat-card i {
        font-size: 3rem;
        opacity: 0.3;
    }

    /* Table Container */
    .table-container {
        background-color: var(--color-white);
        border-radius: var(--border-radius);
        overflow: hidden;
        box-shadow: var(--card-shadow);
        position: relative;
    }

    .table-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--color-earth), var(--color-foliage));
    }

    .table-header {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
        padding: 20px 25px;
    }

    .table-header h5 {
        margin: 0;
        font-weight: 700;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    /* Modern Table */
    .modern-table {
        width: 100%;
        border-collapse: collapse;
        margin: 0;
        background-color: transparent;
    }

    .modern-table thead {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
    }

    .modern-table thead th {
        padding: 18px 15px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.85rem;
        border: none;
        position: relative;
        white-space: nowrap;
    }

    .modern-table thead th::after {
        content: '';
        position: absolute;
        right: 0;
        top: 25%;
        height: 50%;
        width: 1px;
        background-color: rgba(255, 255, 255, 0.2);
    }

    .modern-table thead th:last-child::after {
        display: none;
    }

    .modern-table tbody tr {
        transition: all 0.2s ease;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

    .modern-table tbody tr:nth-child(even) {
        background-color: rgba(245, 222, 179, 0.03);
    }

    .modern-table tbody tr:hover {
        background-color: rgba(139, 115, 85, 0.08);
        transform: scale(1.01);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .modern-table td {
        padding: 15px;
        border: none;
        color: #333;
        font-size: 0.9rem;
        vertical-align: middle;
    }

    /* Voucher Code */
    .voucher-code {
        font-family: 'Courier New', monospace;
        font-weight: 700;
        font-size: 1rem;
        color: var(--color-soil);
    }

    /* Type Badges */
    .type-badge {
        display: inline-block;
        padding: 5px 12px;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        background-color: #e3f2fd;
        color: #1976d2;
    }

    /* Status Badge */
    .status-badge {
        display: inline-block;
        padding: 5px 12px;
        border-radius: 12px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-active {
        background-color: #e8f5e9;
        color: var(--color-foliage);
    }

    .status-inactive {
        background-color: #f5f5f5;
        color: #757575;
    }

    /* Discount Value */
    .discount-value {
        font-weight: 700;
        color: var(--color-foliage);
        font-size: 1.1rem;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 5px;
        flex-wrap: wrap;
    }

    .btn-action {
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 0.85rem;
        font-weight: 600;
        border: 2px solid;
        cursor: pointer;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        gap: 5px;
        text-decoration: none;
    }

    .btn-action.edit {
        background: white;
        border-color: var(--color-hay);
        color: var(--color-hay);
    }

    .btn-action.edit:hover {
        background: var(--color-hay);
        color: white;
    }

    .btn-action.toggle {
        background: white;
        border-color: #f0ad4e;
        color: #f0ad4e;
    }

    .btn-action.toggle:hover {
        background: #f0ad4e;
        color: white;
    }

    .btn-action.copy {
        background: white;
        border-color: #17a2b8;
        color: #17a2b8;
    }

    .btn-action.copy:hover {
        background: #17a2b8;
        color: white;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        background-color: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
    }

    .empty-state i {
        font-size: 4rem;
        color: var(--color-wheat);
        margin-bottom: 20px;
    }

    .empty-state h3 {
        color: var(--color-soil);
        margin-bottom: 15px;
        font-weight: 600;
    }

    .empty-state p {
        color: #777;
        margin-bottom: 25px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Alert Styles */
    .alert-custom {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
        min-width: 300px;
        border-radius: 8px;
        padding: 15px 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .alert-success {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: white;
    }

    .alert-danger {
        background: linear-gradient(135deg, var(--color-danger), #e74c3c);
        color: white;
    }

    /* Responsive */
    @@media (max-width: 992px) {
        .table-container {
            overflow-x: auto;
        }

        .modern-table {
            min-width: 1000px;
        }
    }

    @@media (max-width: 768px) {
        .dashboard-header {
            padding: 20px;
        }

        .dashboard-header h1 {
            font-size: 1.8rem;
        }

        .stats-row {
            grid-template-columns: 1fr;
        }

        .action-bar {
            flex-direction: column;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<div class="container-fluid mt-4">
    <!-- Dashboard Header -->
    <div class="dashboard-header">
        <h1><i class="fas fa-tags"></i> Discount Vouchers</h1>
        <p>Manage discount codes and promotional campaigns</p>
    </div>

    <!-- Action Buttons -->
    <div class="action-bar">
        <a href="@Url.Action("Create")" class="btn btn-success">
            <i class="fas fa-plus-circle"></i> Create New Voucher
        </a>
    </div>

    <!-- Statistics Cards -->
    <div class="stats-row">
        <div class="stat-card primary">
            <div class="stat-card-content">
                <div>
                    <h4>@Model.Count()</h4>
                    <p>Total Vouchers</p>
                </div>
                <div>
                    <i class="fas fa-tags"></i>
                </div>
            </div>
        </div>
        <div class="stat-card">
            <div class="stat-card-content">
                <div>
                    <h4>@Model.Count(v => v.IsActive && v.IsValid)</h4>
                    <p>Active Vouchers</p>
                </div>
                <div>
                    <i class="fas fa-check-circle"></i>
                </div>
            </div>
        </div>
        <div class="stat-card warning">
            <div class="stat-card-content">
                <div>
                    <h4>@Model.Sum(v => v.UsedCount)</h4>
                    <p>Total Uses</p>
                </div>
                <div>
                    <i class="fas fa-chart-line"></i>
                </div>
            </div>
        </div>
        <div class="stat-card info">
            <div class="stat-card-content">
                <div>
                    <h4>@Model.Count(v => !v.IsActive)</h4>
                    <p>Inactive</p>
                </div>
                <div>
                    <i class="fas fa-pause-circle"></i>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <!-- Empty State -->
        <div class="empty-state">
            <i class="fas fa-tags"></i>
            <h3>No Vouchers Found</h3>
            <p>Start creating discount vouchers to boost sales and reward your customers.</p>
            <a href="@Url.Action("Create")" class="btn btn-success">
                <i class="fas fa-plus-circle"></i> Create First Voucher
            </a>
        </div>
    }
    else
    {
        <!-- Table Container -->
        <div class="table-container">
            <div class="table-header">
                <h5><i class="fas fa-list"></i> All Vouchers</h5>
            </div>
            <table class="modern-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-code"></i> Code</th>
                        <th><i class="fas fa-info-circle"></i> Description</th>
                        <th><i class="fas fa-tag"></i> Type</th>
                        <th><i class="fas fa-percentage"></i> Discount</th>
                        <th><i class="fas fa-calendar"></i> Valid Until</th>
                        <th><i class="fas fa-chart-bar"></i> Usage</th>
                        <th><i class="fas fa-toggle-on"></i> Status</th>
                        <th><i class="fas fa-cogs"></i> Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var voucher in Model)
                    {
                        <tr>
                            <td>
                                <span class="voucher-code">@voucher.Code</span>
                            </td>
                            <td>
                                <div>@voucher.Description</div>
                                <small class="text-muted">
                                    @if (voucher.Applicability == FarmTrack.Models.VoucherApplicability.SpecificCategory)
                                    {
                                        <span><i class="fas fa-folder"></i> @voucher.ApplicableCategory</span>
                                    }
                                    else if (voucher.Applicability == FarmTrack.Models.VoucherApplicability.SpecificProduct)
                                    {
                                        <span><i class="fas fa-cube"></i> @(voucher.ApplicableProduct?.Name ?? "Specific Product")</span>
                                    }
                                    else
                                    {
                                        <span><i class="fas fa-globe"></i> All Products</span>
                                    }
                                </small>
                            </td>
                            <td>
                                <span class="type-badge">@voucher.VoucherType</span>
                            </td>
                            <td>
                                <span class="discount-value">@voucher.DisplayValue</span>
                                @if (voucher.MinimumOrderAmount.HasValue)
                                {
                                    <br />
                                    <small class="text-muted">Min: R@(voucher.MinimumOrderAmount.Value.ToString("F2"))</small>
                                }
                            </td>
                            <td>
                                @voucher.ValidTo.ToString("MMM dd, yyyy")
                                @if (voucher.ValidTo < DateTime.Now)
                                {
                                    <br />
                                    <small class="text-danger"><i class="fas fa-clock"></i> Expired</small>
                                }
                                else if (voucher.ValidTo < DateTime.Now.AddDays(7))
                                {
                                    <br />
                                    <small class="text-warning"><i class="fas fa-exclamation-triangle"></i> Expiring soon</small>
                                }
                            </td>
                            <td>
                                @voucher.UsedCount / @(voucher.UsageLimit == 0 ? "∞" : voucher.UsageLimit.ToString())
                                @if (voucher.UsageLimit > 0 && voucher.UsedCount >= voucher.UsageLimit)
                                {
                                    <br />
                                    <small class="text-danger"><i class="fas fa-ban"></i> Limit reached</small>
                                }
                            </td>
                            <td>
                                <span class="status-badge @(voucher.IsActive && voucher.IsValid ? "status-active" : "status-inactive")" id="status-@voucher.VoucherId">
                                    @(voucher.IsActive && voucher.IsValid ? "Active" : "Inactive")
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="@Url.Action("Edit", new { id = voucher.VoucherId })" class="btn-action edit" title="Edit">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <button class="btn-action toggle toggle-status" data-id="@voucher.VoucherId" title="Toggle Status">
                                        <i class="fas fa-power-off"></i>
                                    </button>
                                    <button class="btn-action copy copy-code" data-code="@voucher.Code" title="Copy Code">
                                        <i class="fas fa-copy"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Toggle voucher status
            $('.toggle-status').click(function () {
                var voucherId = $(this).data('id');
                var button = $(this);

                $.post('@Url.Action("ToggleStatus")', { id: voucherId })
                    .done(function (response) {
                        if (response.success) {
                            // Update status badge
                            var badge = $('#status-' + voucherId);
                            if (response.isActive) {
                                badge.removeClass('status-inactive').addClass('status-active').text('Active');
                            } else {
                                badge.removeClass('status-active').addClass('status-inactive').text('Inactive');
                            }

                            // Show success message
                            showAlert(response.message, 'success');
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    })
                    .fail(function () {
                        showAlert('Error updating voucher status', 'danger');
                    });
            });

            // Copy voucher code to clipboard
            $('.copy-code').click(function () {
                var code = $(this).data('code');
                navigator.clipboard.writeText(code).then(function () {
                    showAlert('Voucher code copied: ' + code, 'success');
                }).catch(function () {
                    // Fallback for older browsers
                    var tempInput = $('<input>');
                    $('body').append(tempInput);
                    tempInput.val(code).select();
                    document.execCommand('copy');
                    tempInput.remove();
                    showAlert('Voucher code copied: ' + code, 'success');
                });
            });

            function showAlert(message, type) {
                var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
                var alertHtml = '<div class="alert-custom ' + alertClass + '">' +
                    '<i class="fas fa-' + (type === 'success' ? 'check-circle' : 'exclamation-circle') + '"></i>' +
                    '<span>' + message + '</span>' +
                    '</div>';

                $('body').append(alertHtml);

                // Auto remove after 3 seconds
                setTimeout(function () {
                    $('.alert-custom').fadeOut(function() {
                        $(this).remove();
                    });
                }, 3000);
            }
        });
    </script>
}