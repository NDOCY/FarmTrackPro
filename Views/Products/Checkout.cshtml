@model FarmTrack.Models.CheckoutViewModel

@{
    ViewBag.Title = "Checkout";
    var grandTotal = Model.CartItems.Sum(i => i.Total);
    if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout - User.cshtml";
    }
}

<style>
    :root {
        --color-earth: #8B7355;
        --color-soil: #654321;
        --color-foliage: #4CAF50;
        --color-wheat: #F5DEB3;
        --color-hay: #DAA520;
        --color-danger: #FF6B6B;
        --color-white: #FFFFFF;
        --border-radius: 12px;
        --card-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }

    body {
        background-color: #F9F7F4;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--color-foliage) 0%, #45a049 100%);
        border-radius: var(--border-radius);
        padding: 30px;
        margin-bottom: 30px;
        color: white;
        box-shadow: var(--card-shadow);
    }

        .page-header h2 {
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 12px;
        }

    /* Cards */
    .checkout-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        margin-bottom: 25px;
        overflow: hidden;
    }

    .card-header-custom {
        padding: 20px 25px;
        font-weight: 600;
        color: white;
    }

    .header-info {
        background: linear-gradient(135deg, #17a2b8, #138496);
    }

    .header-success {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
    }

    .header-warning {
        background: linear-gradient(135deg, var(--color-hay), #f0ad4e);
    }

    .header-primary {
        background: linear-gradient(135deg, #3498db, #2980b9);
    }

    .card-header-custom h4 {
        margin: 0 0 5px 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .card-header-custom small {
        opacity: 0.9;
    }

    .card-body-custom {
        padding: 25px;
    }

    /* Form Elements */
    .form-label {
        font-weight: 600;
        color: var(--color-soil);
        font-size: 0.9rem;
        margin-bottom: 8px;
    }

    .form-control, textarea.form-control {
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        padding: 10px 15px;
        transition: all 0.3s;
    }

        .form-control:focus {
            border-color: var(--color-foliage);
            box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
        }

    .form-check-input {
        width: 18px;
        height: 18px;
        cursor: pointer;
        accent-color: var(--color-foliage);
    }

    .form-check-label {
        cursor: pointer;
        margin-left: 8px;
    }

    .text-danger {
        color: var(--color-danger);
        font-size: 0.85rem;
    }

    .form-text {
        color: #999;
        font-size: 0.85rem;
    }

    /* Input Group */
    .input-group {
        display: flex;
    }

        .input-group .form-control {
            border-radius: 8px 0 0 8px;
        }

        .input-group .btn {
            border-radius: 0 8px 8px 0;
        }

    /* Buttons */
    .btn {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        border: none;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .btn-success {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: white;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
    }

        .btn-success:hover:not(:disabled) {
            transform: translateY(-2px);
            box-shadow: 0 6px 16px rgba(76, 175, 80, 0.4);
        }

        .btn-success:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

    .btn-lg {
        padding: 14px 28px;
        font-size: 1.05rem;
    }

    .btn-sm {
        padding: 6px 12px;
        font-size: 0.85rem;
    }

    /* Alerts */
    .alert {
        border-radius: 8px;
        border: none;
        padding: 15px 20px;
    }

    .alert-warning {
        background: rgba(218, 165, 32, 0.1);
        color: var(--color-soil);
        border-left: 4px solid var(--color-hay);
    }

    .alert-info {
        background: rgba(23, 162, 184, 0.1);
        color: #0c5460;
        border-left: 4px solid #17a2b8;
    }

    .alert-success {
        background: rgba(76, 175, 80, 0.1);
        color: #155724;
        border-left: 4px solid var(--color-foliage);
    }

    .alert-danger {
        background: rgba(255, 107, 107, 0.1);
        color: #721c24;
        border-left: 4px solid var(--color-danger);
    }

    .alert-secondary {
        background: rgba(139, 115, 85, 0.05);
        color: var(--color-soil);
        border-left: 4px solid var(--color-earth);
    }

    /* Order Summary */
    .order-summary {
        position: sticky;
        top: 20px;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        font-size: 0.9rem;
    }

    .summary-total {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--color-foliage);
    }

    .items-list {
        max-height: 200px;
        overflow-y: auto;
        margin-bottom: 15px;
    }

    /* Support Card */
    .support-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        padding: 20px;
        text-align: center;
        margin-top: 20px;
    }

        .support-card h6 {
            color: var(--color-soil);
            font-weight: 600;
            margin-bottom: 10px;
        }

    /* Empty Cart */
    .empty-cart {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
    }

        .empty-cart i {
            font-size: 4rem;
            color: var(--color-wheat);
            margin-bottom: 20px;
        }

        .empty-cart h4 {
            color: var(--color-soil);
            margin-bottom: 20px;
        }

    /* Responsive */
    @@media (max-width: 768px) {
        .page-header h2 {
            font-size: 1.5rem;
        }

        .order-summary {
            position: relative;
            top: 0;
            margin-top: 30px;
        }
    }
    /* ... (keep all existing styles from original) ... */
    :root {
        --color-earth: #8B7355;
        --color-soil: #654321;
        --color-foliage: #4CAF50;
        --color-wheat: #F5DEB3;
        --color-hay: #DAA520;
        --color-danger: #FF6B6B;
        --color-white: #FFFFFF;
        --border-radius: 12px;
        --card-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }

    body {
        background-color: #F9F7F4;
    }

    .page-header {
        background: linear-gradient(135deg, var(--color-foliage) 0%, #45a049 100%);
        border-radius: var(--border-radius);
        padding: 30px;
        margin-bottom: 30px;
        color: white;
        box-shadow: var(--card-shadow);
    }

    .page-header h2 {
        font-size: 2rem;
        font-weight: 700;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .checkout-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        margin-bottom: 25px;
        overflow: hidden;
    }

    .card-header-custom {
        padding: 20px 25px;
        font-weight: 600;
        color: white;
    }

    .header-info { background: linear-gradient(135deg, #17a2b8, #138496); }
    .header-success { background: linear-gradient(135deg, var(--color-foliage), #45a049); }
    .header-warning { background: linear-gradient(135deg, var(--color-hay), #f0ad4e); }
    .header-primary { background: linear-gradient(135deg, #3498db, #2980b9); }

    .card-header-custom h4 {
        margin: 0 0 5px 0;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .card-header-custom small {
        opacity: 0.9;
    }

    .card-body-custom {
        padding: 25px;
    }

    .form-label {
        font-weight: 600;
        color: var(--color-soil);
        font-size: 0.9rem;
        margin-bottom: 8px;
    }

    .form-control, textarea.form-control {
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        padding: 10px 15px;
        transition: all 0.3s;
    }

    .form-control:focus {
        border-color: var(--color-foliage);
        box-shadow: 0 0 0 3px rgba(76, 175, 80, 0.1);
    }

    .form-check-input {
        width: 18px;
        height: 18px;
        cursor: pointer;
        accent-color: var(--color-foliage);
    }

    .form-check-label {
        cursor: pointer;
        margin-left: 8px;
    }

    .text-danger {
        color: var(--color-danger);
        font-size: 0.85rem;
    }

    .form-text {
        color: #999;
        font-size: 0.85rem;
    }

    .input-group {
        display: flex;
    }

    .input-group .form-control {
        border-radius: 8px 0 0 8px;
    }

    .input-group .btn {
        border-radius: 0 8px 8px 0;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        border: none;
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .btn-success {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: white;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
    }

    .btn-success:hover:not(:disabled) {
        transform: translateY(-2px);
        box-shadow: 0 6px 16px rgba(76, 175, 80, 0.4);
    }

    .btn-success:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    .btn-lg {
        padding: 14px 28px;
        font-size: 1.05rem;
    }

    .btn-sm {
        padding: 6px 12px;
        font-size: 0.85rem;
    }

    .alert {
        border-radius: 8px;
        border: none;
        padding: 15px 20px;
    }

    .alert-warning {
        background: rgba(218, 165, 32, 0.1);
        color: var(--color-soil);
        border-left: 4px solid var(--color-hay);
    }

    .alert-info {
        background: rgba(23, 162, 184, 0.1);
        color: #0c5460;
        border-left: 4px solid #17a2b8;
    }

    .alert-success {
        background: rgba(76, 175, 80, 0.1);
        color: #155724;
        border-left: 4px solid var(--color-foliage);
    }

    .alert-danger {
        background: rgba(255, 107, 107, 0.1);
        color: #721c24;
        border-left: 4px solid var(--color-danger);
    }

    .alert-secondary {
        background: rgba(139, 115, 85, 0.05);
        color: var(--color-soil);
        border-left: 4px solid var(--color-earth);
    }

    .order-summary {
        position: sticky;
        top: 20px;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        font-size: 0.9rem;
    }

    .summary-total {
        font-size: 1.3rem;
        font-weight: 700;
        color: var(--color-foliage);
    }

    .items-list {
        max-height: 200px;
        overflow-y: auto;
        margin-bottom: 15px;
    }

    .support-card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        padding: 20px;
        text-align: center;
        margin-top: 20px;
    }

    .support-card h6 {
        color: var(--color-soil);
        font-weight: 600;
        margin-bottom: 10px;
    }

    .empty-cart {
        text-align: center;
        padding: 60px 20px;
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
    }

    .empty-cart i {
        font-size: 4rem;
        color: var(--color-wheat);
        margin-bottom: 20px;
    }

    .empty-cart h4 {
        color: var(--color-soil);
        margin-bottom: 20px;
    }

    /* NEW: Shipping info styles */
    .shipping-info {
        background: rgba(76, 175, 80, 0.05);
        border-left: 4px solid var(--color-foliage);
        padding: 12px 15px;
        border-radius: 6px;
        margin-top: 10px;
        font-size: 0.9rem;
    }

    .free-shipping-banner {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: white;
        padding: 10px 15px;
        border-radius: 8px;
        text-align: center;
        font-weight: 600;
        margin-bottom: 15px;
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.8; }
    }

    @@media (max-width: 768px) {
        .page-header h2 {
            font-size: 1.5rem;
        }

        .order-summary {
            position: relative;
            top: 0;
            margin-top: 30px;
        }
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<div class="page-header">
    <h2><i class="fas fa-credit-card"></i> Checkout</h2>
</div>

@if (!Model.CartItems.Any())
{
    <div class="empty-cart">
        <i class="fas fa-shopping-cart"></i>
        <h4>Your cart is empty</h4>
        <a href="@Url.Action("Store")" class="btn btn-success btn-lg">
            <i class="fas fa-store"></i> Continue Shopping
        </a>
    </div>
}
else
{
    using (Html.BeginForm("ProcessCheckout", "Products", FormMethod.Post, new { id = "checkoutForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <!-- Left Column -->
            <div class="col-md-8">
                <!-- Customer Information -->
                <div class="checkout-card">
                    <div class="card-header-custom header-info">
                        <h4><i class="fas fa-user"></i> Delivery Information</h4>
                        <small>Pre-filled from your profile - you can edit if needed</small>
                    </div>
                    <div class="card-body-custom">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(m => m.CustomerName, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control", placeholder = "Enter your full name", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6 mb-3">
                                @Html.LabelFor(m => m.CustomerPhone, new { @class = "form-label" })
                                @Html.TextBoxFor(m => m.CustomerPhone, new { @class = "form-control", placeholder = "Enter phone number", required = "required" })
                                @Html.ValidationMessageFor(m => m.CustomerPhone, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.CustomerEmail, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.CustomerEmail, new { @class = "form-control", placeholder = "Enter email", type = "email", required = "required" })
                            @Html.ValidationMessageFor(m => m.CustomerEmail, "", new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.DeliveryAddress, new { @class = "form-label" })
                            @Html.TextAreaFor(m => m.DeliveryAddress, new { @class = "form-control", rows = "3", placeholder = "Full delivery address", required = "required", id = "deliveryAddress" })
                            @Html.ValidationMessageFor(m => m.DeliveryAddress, "", new { @class = "text-danger" })
                            <button type="button" class="btn btn-sm btn-success mt-2" id="calculateShippingBtn">
                                <i class="fas fa-calculator"></i> Calculate Shipping
                            </button>
                            <div id="shippingInfo" class="shipping-info" style="display: none;"></div>
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.DeliveryInstructions, new { @class = "form-label" })
                            @Html.TextAreaFor(m => m.DeliveryInstructions, new { @class = "form-control", rows = "2", placeholder = "Special delivery instructions" })
                        </div>
                    </div>
                </div>

                <!-- Discount Voucher -->
                <div class="checkout-card">
                    <div class="card-header-custom header-success">
                        <h4><i class="fas fa-tag"></i> Discount Voucher</h4>
                    </div>
                    <div class="card-body-custom">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="input-group mb-2">
                                    <input type="text" id="voucherCode" class="form-control" placeholder="Enter voucher code" />
                                    <button type="button" class="btn btn-success" id="applyVoucherBtn">
                                        <i class="fas fa-check"></i> Apply
                                    </button>
                                </div>
                                <small class="form-text">Enter your discount code above</small>
                                <div id="voucherMessage" class="mt-2"></div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Payment Method -->
                <div class="checkout-card">
                    <div class="card-header-custom header-warning">
                        <h4><i class="fas fa-credit-card"></i> Payment Method</h4>
                    </div>
                    <div class="card-body-custom">
                        <div class="mb-3">
                            <label class="form-label">Select Payment Method *</label>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="radio" name="PaymentMethod" value="Cash" id="cash" checked>
                                <label class="form-check-label" for="cash">
                                    <i class="fas fa-money-bill-wave"></i> Cash on Delivery
                                </label>
                            </div>
                            <div class="form-check mb-2">
                                <input class="form-check-input" type="radio" name="PaymentMethod" value="Card" id="card">
                                <label class="form-check-label" for="card">
                                    <i class="fas fa-credit-card"></i> Credit/Debit Card (Simulated)
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="radio" name="PaymentMethod" value="Transfer" id="transfer">
                                <label class="form-check-label" for="transfer">
                                    <i class="fas fa-university"></i> Bank Transfer
                                </label>
                            </div>
                            @Html.ValidationMessageFor(m => m.PaymentMethod, "", new { @class = "text-danger" })
                        </div>

                        <!-- Card Details -->
                        <div id="cardDetails" style="display: none;">
                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">Card Number</label>
                                    <input type="text" name="cardNumber" class="form-control" placeholder="1234 5678 9012 3456" maxlength="19">
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="form-label">Expiry</label>
                                    <input type="text" name="expiryDate" class="form-control" placeholder="MM/YY" maxlength="5">
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label class="form-label">CVV</label>
                                    <input type="text" name="cvv" class="form-control" placeholder="123" maxlength="3">
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Name on Card</label>
                                <input type="text" name="nameOnCard" class="form-control" placeholder="As shown on card">
                            </div>
                            <div class="alert alert-info">
                                <small><i class="fas fa-info-circle"></i> Simulated payment - no real transaction</small>
                            </div>
                        </div>

                        <!-- Bank Transfer Details -->
                        <div id="transferDetails" style="display: none;">
                            <div class="alert alert-info">
                                <h6><i class="fas fa-university"></i> Bank Transfer Instructions</h6>
                                <p class="mb-0">
                                    <strong>Bank:</strong> FarmTrack Bank<br>
                                    <strong>Account:</strong> 1234 5678 9012<br>
                                    <strong>Reference:</strong> Your Name + Order #<br>
                                    <small>Send proof to payments@farmtrack.com</small>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column: Order Summary -->
            <div class="col-md-4">
                <div class="order-summary">
                    <div class="checkout-card">
                        <div class="card-header-custom header-primary">
                            <h4><i class="fas fa-receipt"></i> Order Summary</h4>
                        </div>
                        <div class="card-body-custom">
                            <!-- Free Shipping Banner -->
                            <div id="freeShippingBanner" class="free-shipping-banner" style="display: none;">
                                🎉 Free Shipping!
                            </div>

                            <!-- Items -->
                            <div class="mb-3">
                                <h6>Items (@Model.CartItems.Sum(i => i.Quantity))</h6>
                                <div class="items-list">
                                    @foreach (var item in Model.CartItems)
                                    {
                                        <div class="summary-item">
                                            <span>@item.Name x @item.Quantity</span>
                                            <span>R @(item.Total.ToString("F2"))</span>
                                        </div>
                                    }
                                </div>
                            </div>

                            <hr>

                            <!-- Pricing -->
                            <div class="summary-item">
                                <span>Subtotal:</span>
                                <span id="subtotalAmount">R @(grandTotal.ToString("F2"))</span>
                            </div>

                            <!-- Shipping Fee -->
                            <div class="summary-item" id="shippingRow">
                                <span>
                                    Shipping:
                                    <i class="fas fa-info-circle" title="Calculate shipping based on your address" style="font-size: 0.8rem; opacity: 0.7;"></i>
                                </span>
                                <span id="shippingAmount">R 50.00</span>
                            </div>

                            <div class="summary-item text-success" id="discountRow" style="display: none;">
                                <span>Discount:</span>
                                <span id="discountAmount">-R0.00</span>
                            </div>

                            <hr>

                            <div class="d-flex justify-content-between">
                                <span class="fw-bold">Total:</span>
                                <span class="summary-total" id="finalTotal">R @((grandTotal + 50).ToString("F2"))</span>
                            </div>

                            <!-- Delivery Estimate -->
                            <div class="alert alert-secondary mt-3">
                                <i class="fas fa-shipping-fast"></i>
                                <strong>Estimated Delivery:</strong><br>
                                <span id="deliveryEstimate">2-3 business days</span>
                            </div>

                            <!-- Free Shipping Progress -->
                            @if (grandTotal < 500)
                            {
                                var remaining = 500 - grandTotal;
                                var progress = (grandTotal / 500) * 100;
                                <div class="alert alert-info">
                                    <small>
                                        <i class="fas fa-truck"></i>
                                        Add <strong>R@(remaining.ToString("F2"))</strong> more for free shipping!
                                    </small>
                                    <div class="progress mt-2" style="height: 6px;">
                                        <div class="progress-bar bg-success" style="width: @(progress)%"></div>
                                    </div>
                                </div>
                            }

                            <!-- Hidden Fields -->
                            <input type="hidden" name="voucherCode" id="voucherCodeField" />

                            <!-- Submit Button -->
                            <button type="submit" class="btn btn-success btn-lg w-100" id="submitBtn">
                                <i class="fas fa-lock"></i> Place Order
                            </button>

                            <div class="text-center mt-2">
                                <small class="text-muted">
                                    <i class="fas fa-shield-alt"></i> Secure checkout
                                </small>
                            </div>
                        </div>
                    </div>

                    <!-- Support -->
                    <div class="support-card">
                        <h6><i class="fas fa-headset"></i> Need Help?</h6>
                        <small class="text-muted">
                            Call: (012) 345-6789<br>
                            Email: support@farmtrack.com
                        </small>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var currentShippingFee = 50.00;
        var currentDiscount = 0.00;
        var subtotal = @grandTotal;

        // Calculate shipping when address is entered
        $('#calculateShippingBtn').click(function() {
            var address = $('#deliveryAddress').val();

            if (!address || address.trim() === '') {
                alert('Please enter a delivery address first');
                return;
            }

            $(this).prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Calculating...');

            $.post('@Url.Action("CalculateShipping", "Products")', {
                deliveryAddress: address
            }).done(function(response) {
                if (response.success) {
                    currentShippingFee = response.shippingFee;

                    var message = response.message;
                    if (response.isFreeShipping) {
                        $('#shippingInfo').html(
                            '<strong style="color: var(--color-foliage);">' +
                            '<i class="fas fa-gift"></i> ' + message + '</strong>'
                        ).show();
                        $('#freeShippingBanner').show();
                    } else {
                        $('#shippingInfo').html(
                            '<i class="fas fa-truck"></i> ' + message +
                            '<br><small>Shipping fee: <strong>R' + response.shippingFee.toFixed(2) + '</strong></small>'
                        ).show();
                        $('#freeShippingBanner').hide();
                    }

                    updateOrderTotal();
                } else {
                    alert('Could not calculate shipping. Using standard rate of R50.');
                    $('#shippingInfo').html(
                        '<i class="fas fa-info-circle"></i> Standard shipping rate applied: <strong>R50.00</strong>'
                    ).show();
                }

                $('#calculateShippingBtn').prop('disabled', false)
                    .html('<i class="fas fa-calculator"></i> Recalculate Shipping');
            }).fail(function() {
                alert('Error calculating shipping. Please try again.');
                $('#calculateShippingBtn').prop('disabled', false)
                    .html('<i class="fas fa-calculator"></i> Calculate Shipping');
            });
        });

        // Auto-calculate shipping when address changes
        var addressTimeout;
        $('#deliveryAddress').on('input', function() {
            clearTimeout(addressTimeout);
            addressTimeout = setTimeout(function() {
                if ($('#deliveryAddress').val().length > 20) {
                    $('#calculateShippingBtn').click();
                }
            }, 2000);
        });

        // Voucher application
        $('#applyVoucherBtn').click(function() {
            var voucherCode = $('#voucherCode').val();

            if (!voucherCode) {
                showVoucherMessage('Please enter a voucher code', 'danger');
                return;
            }

            $('#applyVoucherBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Applying...');

            $.post('@Url.Action("ValidateVoucher", "DiscountVouchers")', {
                code: voucherCode,
                cartTotal: subtotal
            }).done(function(response) {
                if (response.success) {
                    showVoucherMessage(
                        '<strong>' + response.message + '</strong><br><small>' + response.voucherDescription + '</small>',
                        'success'
                    );
                    $('#voucherCodeField').val(voucherCode);
                    currentDiscount = response.discountAmount;
                    updateOrderTotal();
                    $('#applyVoucherBtn').hide();
                    $('#voucherCode').prop('disabled', true);
                    $('#voucherMessage').append(
                        '<button type="button" class="btn btn-sm btn-outline-danger mt-2" onclick="removeVoucher()">' +
                        '<i class="fas fa-times"></i> Remove</button>'
                    );
                } else {
                    showVoucherMessage(response.message, 'danger');
                    $('#applyVoucherBtn').prop('disabled', false).html('<i class="fas fa-check"></i> Apply');
                }
            }).fail(function() {
                showVoucherMessage('Error applying voucher', 'danger');
                $('#applyVoucherBtn').prop('disabled', false).html('<i class="fas fa-check"></i> Apply');
            });
        });

        function showVoucherMessage(message, type) {
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            $('#voucherMessage').html('<div class="alert ' + alertClass + ' alert-dismissible fade show">' +
                message + '<button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
        }

        function updateOrderTotal() {
            var total = subtotal - currentDiscount + currentShippingFee;

            $('#subtotalAmount').text('R' + subtotal.toFixed(2));
            $('#shippingAmount').text(currentShippingFee === 0 ? 'FREE' : 'R' + currentShippingFee.toFixed(2));
            $('#discountAmount').text('-R' + currentDiscount.toFixed(2));
            $('#finalTotal').text('R' + total.toFixed(2));

            if (currentDiscount > 0) {
                $('#discountRow').show();
            } else {
                $('#discountRow').hide();
            }

            if (currentShippingFee === 0) {
                $('#shippingRow span:first').html('Shipping: <span class="badge bg-success">FREE</span>');
            }
        }

        function removeVoucher() {
            $('#voucherCode').val('').prop('disabled', false);
            $('#voucherCodeField').val('');
            $('#voucherMessage').empty();
            $('#applyVoucherBtn').show().prop('disabled', false).html('<i class="fas fa-check"></i> Apply');
            currentDiscount = 0;
            updateOrderTotal();
        }

        // Payment method toggle
        $('input[name="PaymentMethod"]').change(function () {
            $('#cardDetails, #transferDetails').hide();
            if ($(this).val() === 'Card') $('#cardDetails').show();
            if ($(this).val() === 'Transfer') $('#transferDetails').show();
        });

        // Card number formatting
        $('input[name="cardNumber"]').on('input', function () {
            var value = $(this).val().replace(/\s+/g, '').replace(/[^0-9]/gi, '');
            var match = value.match(/\d{4,16}/g);
            var parts = [];
            if (match) {
                for (var i = 0; i < match[0].length; i += 4) {
                    parts.push(match[0].substring(i, i + 4));
                }
                $(this).val(parts.join(' '));
            }
        });

        // Expiry date formatting
        $('input[name="expiryDate"]').on('input', function () {
            var value = $(this).val().replace(/\//g, '');
            if (value.length >= 2) {
                value = value.substring(0, 2) + '/' + value.substring(2, 4);
            }
            $(this).val(value);
        });

        // Form submission
        $('#checkoutForm').on('submit', function () {
            var paymentMethod = $('input[name="PaymentMethod"]:checked').val();
            if (paymentMethod === 'Card') {
                if (!$('input[name="cardNumber"]').val() || !$('input[name="expiryDate"]').val() || !$('input[name="cvv"]').val()) {
                    alert('Please complete all card details');
                    return false;
                }
            }
            $('#submitBtn').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Processing...');
            return true;
        });

        // Voucher code enter key
        $('#voucherCode').keypress(function(e) {
            if (e.which === 13) {
                e.preventDefault();
                $('#applyVoucherBtn').click();
            }
        });

        // Initialize
        $(document).ready(function() {
            updateOrderTotal();
        });
    </script>
}