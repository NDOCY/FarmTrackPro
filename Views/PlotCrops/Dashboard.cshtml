@*@model FarmTrack.Models.PlotCrop
    @ushng FarmTrack.Models
    @using FarmTrack.Helpers

    @{
        ViewBag.Title = $"{Model.Crop.Name} in Plot: {Model.Plot.Name}";
    }

    <div class="row">
        <div class="col-md-4">
            <!-- Crop Information Card -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h4>Crop Information</h4>
                </div>
                <div class="card-body">
                    <p><strong>Status:</strong> <span class="badge @GetStatusBadge(Model.Status)">@Model.Status</span></p>
                    <p><strong>Planted On:</strong> @(Model.DatePlanted?.ToString("d") ?? "Not planted yet")</p>
                    <p><strong>Expected Maturity:</strong> @(Model.ExpectedMaturityDate?.ToString("d") ?? "N/A")</p>
                    <p><strong>Days to Maturity:</strong> @GetDaysToMaturity(Model)</p>
                    <p><strong>Expected Yield:</strong> @Model.ExpectedYield kg/hectare</p>

                    @if (Model.Status == "Preparation")
                    {
                        using (Html.BeginForm("StartPlanting", "PlotCrops", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@Model.Id" />
                            <button type="submit" class="btn btn-success mt-2">
                                Start Planting Phase
                            </button>
                        }
                    }

                </div>
            </div>

            <!-- Activity Section -->
            <div class="card mb-4">
                <div class="card-header">
                    <h4>Activity Log</h4>
                </div>
                <div class="card-body">
                    <div id="activityList">
                        @Html.Action("ActivityList", new { plotCropId = Model.Id })
                    </div>

                    <div class="mt-3">
                        <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#activityModal">
                            Add New Activity
                        </button>
                    </div>
                </div>
            </div>

            <!-- Severity Trends -->
            @Html.Action("SeverityTrends", new { plotCropId = Model.Id })
        </div>

        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <a class="nav-link active" data-toggle="tab" href="#tasks">Tasks</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#growth">Growth Tracking</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#harvest">Harvest</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#analytics">Analytics</a>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <div class="tab-content">
                        <div class="tab-pane active" id="tasks">
                            @Html.Action("TaskList", "PlotCrops", new { plotCropId = Model.Id })

                        </div>

                        <div class="tab-pane" id="growth">
                            @if (Model.Status != "Preparation")
                            {
                                @Html.Action("GrowthRecords", "PlotCrops", new { id = Model.Id })
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    Growth tracking will be available after planting begins.
                                </div>
                            }
                        </div>

                        <div class="tab-pane" id="harvest">
                            @if (Model.Status == "Harvested")
                            {
                                @Html.Action("HarvestDetails", "PlotCrops", new { id = Model.Id })
                            }
                            else if (Model.ExpectedMaturityDate.HasValue && Model.ExpectedMaturityDate.Value <= DateTime.Now)
                            {
                                <div class="alert alert-warning">
                                    <h5>Crop is ready for harvest!</h5>
                                    @using (Html.BeginForm("StartHarvest", "PlotCrops", FormMethod.Post))
                                    {
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@Model.Id" />
                                        <button type="submit" class="btn btn-warning">
                                            Begin Harvest Process
                                        </button>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-info">
                                    @if (Model.ExpectedMaturityDate.HasValue)
                                    {
                                        <p>Estimated harvest date: @Model.ExpectedMaturityDate.Value.ToString("d")</p>
                                        <p>@((Model.ExpectedMaturityDate.Value - DateTime.Now).Days) days remaining</p>
                                    }
                                    else
                                    {
                                        <p>Harvest information will be available once planting begins.</p>
                                    }
                                </div>
                            }
                        </div>

                        <div class="tab-pane" id="analytics">
                            @*@@*Html.Action("CropAnalytics", "PlotCrops", new { id = Model.Id })*@@*
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Activity Modal -->
                                <div class="modal fade" id="activityModal" tabindex="-1" role="dialog" aria-labelledby="activityModalLabel">
                                    <div class="modal-dialog modal-lg" role="document">
                                        <div class="modal-content">
                                            <div class="modal-body" id="activityModalBody">
                                                @Html.Action("ActivityForm", "PlotCrops", new { plotCropId = Model.Id })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Helper Functions -->
                                @functions {
                                    string GetStatusBadge(string status)
                                    {
                                        switch (status)
                                        {
                                            case "Preparation": return "bg-secondary";
                                            case "Planting": return "bg-info";
                                            case "Growing": return "bg-primary";
                                            case "Harvested": return "bg-success";
                                            default: return "bg-light text-dark";
                                        }
                                    }

                                    string GetDaysToMaturity(PlotCrop plotCrop)
                                    {
                                        if (plotCrop.Status == "Harvested") return "Harvest completed";
                                        if (!plotCrop.ExpectedMaturityDate.HasValue) return "N/A";

                                        var days = (plotCrop.ExpectedMaturityDate.Value - DateTime.Now).Days;
                                        return days > 0 ? $"{days} days" : "Ready for harvest";
                                    }
                                }

                                @section Styles {
                                    <style>
                                        .activity-feed {
                                            max-height: 300px;
                                            overflow-y: auto;
                                        }

                                        .activity-item {
                                            border-left: 3px solid #6c757d;
                                        }

                                        .badge {
                                            font-size: 0.9em;
                                            padding: 0.35em 0.65em;
                                        }
                                    </style>
                                }

                                @section Scripts {
                                    <script>
                                        $(function() {
                                            // Refresh activity list every 30 seconds
                                            setInterval(function() {
                                                $('#activityList').load('@Url.Action("ActivityList", new { plotCropId = Model.Id })');
                                                $('#activityStats').load('@Url.Action("ActivityStats", new { plotCropId = Model.Id })');
                                            }, 30000);

                                            // Handle activity modal form submission
                                            $(document).on('submit', '#activityForm', function(e) {
                                                e.preventDefault();
                                                var formData = new FormData(this);

                                                $.ajax({
                                                    url: $(this).attr('action'),
                                                    type: 'POST',
                                                    data: formData,
                                                    processData: false,
                                                    contentType: false,
                                                    success: function(response) {
                                                        if (response.success) {
                                                            $('#activityModal').modal('hide');
                                                            $('#activityList').load('@Url.Action("ActivityList", new { plotCropId = Model.Id })');
                                                            $('#activityStats').load('@Url.Action("ActivityStats", new { plotCropId = Model.Id })');
                                                        } else {
                                                            $('#activityModalBody').html(response);
                                                        }
                                                    }
                                                });
                                            });

                                            // Initialize tab functionality
                                            $('.nav-tabs a').click(function(e) {
                                                e.preventDefault();
                                                $(this).tab('show');
                                            });
                                        });
                                    </script>
                                }*@
                            @*
                                                            @model FarmTrack.Models.PlotCrop
                                                            @using FarmTrack.Models
                                                            @using FarmTrack.Helpers

                                                            @{
                                                                ViewBag.Title = $"{Model.Crop.Name} in Plot: {Model.Plot.Name}";
                                                            }

                                                            <div class="row">
                                                                <div class="col-md-4">
                                                                    <!-- Crop Information Card -->
                                                                    <div class="card mb-4">
                                                                        <div class="card-header bg-primary text-white">
                                                                            <h4>Crop Information</h4>
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <p><strong>Status:</strong> <span class="badge @GetStatusBadge(Model.Status)">@Model.Status</span></p>
                                                                            <p><strong>Planted On:</strong> @(Model.DatePlanted?.ToString("d") ?? "Not planted yet")</p>
                                                                            <p><strong>Expected Maturity:</strong> @(Model.ExpectedMaturityDate?.ToString("d") ?? "N/A")</p>
                                                                            <p><strong>Days to Maturity:</strong> @GetDaysToMaturity(Model)</p>
                                                                            <p><strong>Expected Yield:</strong> @Model.ExpectedYield kg/hectare</p>

                                                                            @if (Model.Status == "Preparation")
                                                                            {
                                                                                using (Html.BeginForm("StartPlanting", "PlotCrops", FormMethod.Post))
                                                                                {
                                                                                    @Html.AntiForgeryToken()
                                                                                    <input type="hidden" name="id" value="@Model.Id" />
                                                                                    <button type="submit" class="btn btn-success mt-2">
                                                                                        Start Planting Phase
                                                                                    </button>
                                                                                }
                                                                            }

                                                                        </div>
                                                                    </div>

                                                                    <!-- Activity Section -->
                                                                    <div class="card mb-4">
                                                                        <div class="card-header">
                                                                            <h4>Activity Log</h4>
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <div id="activityList">
                                                                                @Html.Action("ActivityList", new { plotCropId = Model.Id })
                                                                            </div>

                                                                            <div class="mt-3">
                                                                                <button class="btn btn-sm btn-primary" data-toggle="modal" data-target="#activityModal">
                                                                                    Add New Activity
                                                                                </button>
                                                                            </div>
                                                                        </div>
                                                                    </div>

                                                                    <!-- Severity Trends -->
                                                                    @Html.Action("SeverityTrends", new { plotCropId = Model.Id })
                                                                </div>

                                                                <div class="col-md-8">
                                                                    <div class="card">
                                                                        <div class="card-header">
                                                                            <ul class="nav nav-tabs card-header-tabs">
                                                                                <li class="nav-item">
                                                                                    <a class="nav-link active" data-toggle="tab" href="#tasks">Tasks</a>
                                                                                </li>
                                                                                <li class="nav-item">
                                                                                    <a class="nav-link" data-toggle="tab" href="#growth">Growth Tracking</a>
                                                                                </li>
                                                                                <li class="nav-item">
                                                                                    <a class="nav-link" data-toggle="tab" href="#harvest">Harvest</a>
                                                                                </li>
                                                                                <li class="nav-item">
                                                                                    <a class="nav-link" data-toggle="tab" href="#analytics">Analytics</a>
                                                                                </li>
                                                                            </ul>
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <div class="tab-content">
                                                                                <div class="tab-pane active" id="tasks">
                                                                                    @Html.Action("TaskList", "PlotCrops", new { plotCropId = Model.Id })

                                                                                </div>

                                                                                <div class="tab-pane" id="growth">
                                                                                    @if (Model.Status != "Preparation")
                                                                                    {
                                                                                        @Html.Action("GrowthRecords", "PlotCrops", new { id = Model.Id })
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="alert alert-info">
                                                                                            Growth tracking will be available after planting begins.
                                                                                        </div>
                                                                                    }
                                                                                </div>

                                                                                <div class="tab-pane" id="harvest">
                                                                                    @if (Model.Status == "Harvested")
                                                                                    {
                                                                                        @Html.Action("HarvestDetails", "PlotCrops", new { id = Model.Id })
                                                                                    }
                                                                                    else if (Model.ExpectedMaturityDate.HasValue && Model.ExpectedMaturityDate.Value <= DateTime.Now)
                                                                                    {
                                                                                        <div class="alert alert-warning">
                                                                                            <h5>Crop is ready for harvest!</h5>
                                                                                            @using (Html.BeginForm("StartHarvest", "PlotCrops", FormMethod.Post))
                                                                                            {
                                                                                                @Html.AntiForgeryToken()
                                                                                                <input type="hidden" name="id" value="@Model.Id" />
                                                                                                <button type="submit" class="btn btn-warning">
                                                                                                    Begin Harvest Process
                                                                                                </button>
                                                                                            }
                                                                                        </div>
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="alert alert-info">
                                                                                            @if (Model.ExpectedMaturityDate.HasValue)
                                                                                            {
                                                                                                <p>Estimated harvest date: @Model.ExpectedMaturityDate.Value.ToString("d")</p>
                                                                                                <p>@((Model.ExpectedMaturityDate.Value - DateTime.Now).Days) days remaining</p>
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <p>Harvest information will be available once planting begins.</p>
                                                                                            }
                                                                                        </div>
                                                                                    }
                                                                                </div>

                                                                                <div class="tab-pane" id="analytics">
                                                                                    @Html.Action("CropAnalytics", "PlotCrops", new { id = Model.Id })
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <!-- Activity Modal -->
                                                            <div class="modal fade" id="activityModal" tabindex="-1" role="dialog" aria-labelledby="activityModalLabel">
                                                                <div class="modal-dialog modal-lg" role="document">
                                                                    <div class="modal-content">
                                                                        <div class="modal-body" id="activityModalBody">
                                                                            @Html.Action("ActivityForm", "PlotCrops", new { plotCropId = Model.Id })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <!-- Replace the modal button with this collapsible form in your dashboard -->

                                                            <div class="card mb-4">
                                                                <div class="card-header">
                                                                    <h4>Activity Log</h4>
                                                                    <button class="btn btn-sm btn-primary float-right" type="button" data-toggle="collapse" data-target="#addActivityForm">
                                                                        <i class="fas fa-plus"></i> Add Activity
                                                                    </button>
                                                                </div>
                                                                <div class="card-body">
                                                                    <!-- Collapsible Form -->
                                                                    <div class="collapse mb-4" id="addActivityForm">
                                                                        <div class="card card-body bg-light">
                                                                            @using (Html.BeginForm("AddActivity", "PlotCrops", FormMethod.Post, new { enctype = "multipart/form-data", id = "inlineActivityForm" }))
                                                                            {
                                                                                @Html.AntiForgeryToken()
                                                                                <input type="hidden" name="PlotCropId" value="@Model.Id" />

                                                                                <div class="row">
                                                                                    <div class="col-md-6">
                                                                                        <div class="form-group">
                                                                                            <label>Activity Type</label>
                                                                                            <select name="ActivityType" class="form-control" id="inlineActivityType" required>
                                                                                                <option value="">-- Select Type --</option>
                                                                                                <option value="Fertilization">Fertilization</option>
                                                                                                <option value="Pest">Pest Control</option>
                                                                                                <option value="Disease">Disease Treatment</option>
                                                                                                <option value="Weeding">Weeding</option>
                                                                                                <option value="GrowthRecording">Growth Recording</option>
                                                                                                <option value="Irrigation">Irrigation</option>
                                                                                                <option value="Pruning">Pruning</option>
                                                                                                <option value="Other">Other</option>
                                                                                            </select>
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="col-md-6">
                                                                                        <div class="form-group">
                                                                                            <label>Date & Time</label>
                                                                                            <input type="datetime-local" name="ActivityDate" class="form-control"
                                                                                                   value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required />
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                                <div class="form-group">
                                                                                    <label>Description</label>
                                                                                    <input type="text" name="Description" class="form-control" required />
                                                                                </div>

                                                                                <!-- Fertilization Fields -->
                                                                                <div id="inlineFertilizationFields" class="conditional-section" style="display:none;">
                                                                                    <div class="border rounded p-3 mb-3 bg-white">
                                                                                        <h6 class="text-success">Fertilization Details</h6>
                                                                                        <div class="row">
                                                                                            <div class="col-md-4">
                                                                                                <label>Product Name</label>
                                                                                                <input type="text" name="ProductName" class="form-control" />
                                                                                            </div>
                                                                                            <div class="col-md-4">
                                                                                                <label>Amount Used</label>
                                                                                                <input type="number" step="0.1" name="AmountUsed" class="form-control" />
                                                                                            </div>
                                                                                            <div class="col-md-4">
                                                                                                <label>Unit</label>
                                                                                                <input type="text" name="Unit" class="form-control" placeholder="kg, ml, etc." />
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                                <!-- Pest/Disease Fields -->
                                                                                <div id="inlinePestDiseaseFields" class="conditional-section" style="display:none;">
                                                                                    <div class="border rounded p-3 mb-3 bg-white">
                                                                                        <h6 class="text-warning">Pest/Disease Details</h6>
                                                                                        <div class="row">
                                                                                            <div class="col-md-6">
                                                                                                <label>Severity</label>
                                                                                                <select name="Severity" class="form-control">
                                                                                                    <option value="">-- Select Severity --</option>
                                                                                                    <option value="Low">Low</option>
                                                                                                    <option value="Medium">Medium</option>
                                                                                                    <option value="High">High</option>
                                                                                                    <option value="Critical">Critical</option>
                                                                                                </select>
                                                                                            </div>
                                                                                            <div class="col-md-6">
                                                                                                <label>Treatment Used</label>
                                                                                                <input type="text" name="ProductName" class="form-control" />
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                                <!-- Growth Fields -->
                                                                                <div id="inlineGrowthFields" class="conditional-section" style="display:none;">
                                                                                    <div class="border rounded p-3 mb-3 bg-white">
                                                                                        <h6 class="text-info">Growth Recording</h6>
                                                                                        <div class="row">
                                                                                            <div class="col-md-6">
                                                                                                <label>Growth Stage</label>
                                                                                                <select name="GrowthStage" class="form-control">
                                                                                                    <option value="">-- Select Stage --</option>
                                                                                                    <option value="Seedling">Seedling</option>
                                                                                                    <option value="Vegetative">Vegetative</option>
                                                                                                    <option value="Flowering">Flowering</option>
                                                                                                    <option value="Fruiting">Fruiting</option>
                                                                                                    <option value="Mature">Mature</option>
                                                                                                </select>
                                                                                            </div>
                                                                                            <div class="col-md-6">
                                                                                                <label>Measurement</label>
                                                                                                <input type="number" step="0.1" name="MeasurementValue" class="form-control" placeholder="cm or kg" />
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                                <div class="row">
                                                                                    <div class="col-md-6">
                                                                                        <div class="form-group">
                                                                                            <label>Photo</label>
                                                                                            <input type="file" name="ImageFile" class="form-control-file" accept="image/*" />
                                                                                        </div>
                                                                                    </div>
                                                                                    <div class="col-md-6">
                                                                                        <div class="form-group">
                                                                                            <label>Notes</label>
                                                                                            <textarea name="Notes" class="form-control" rows="2"></textarea>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>

                                                                                <div class="form-group">
                                                                                    <button type="submit" class="btn btn-success">
                                                                                        <i class="fas fa-save"></i> Save Activity
                                                                                    </button>
                                                                                    <button type="button" class="btn btn-secondary ml-2" data-toggle="collapse" data-target="#addActivityForm">
                                                                                        Cancel
                                                                                    </button>
                                                                                </div>
                                                                            }
                                                                        </div>
                                                                    </div>

                                                                    <!-- Activity List -->
                                                                    <div id="activityList">
                                                                        @Html.Action("ActivityList", new { plotCropId = Model.Id })
                                                                    </div>
                                                                </div>
                                                            </div>

                                                            <script>
                                $(document).ready(function() {
                                    // Simple, straightforward event handling
                                    $('#inlineActivityType').on('change', function() {
                                        var type = $(this).val();

                                        // Hide all conditional sections
                                        $('.conditional-section').hide();

                                        // Clear all conditional fields
                                        $('.conditional-section input').val('');
                                        $('.conditional-section select').val('');

                                        // Show relevant section
                                        switch(type) {
                                            case 'Fertilization':
                                                $('#inlineFertilizationFields').show();
                                                break;
                                            case 'Pest':
                                            case 'Disease':
                                                $('#inlinePestDiseaseFields').show();
                                                break;
                                            case 'GrowthRecording':
                                                $('#inlineGrowthFields').show();
                                                break;
                                        }
                                    });

                                    // Form submission
                                    $('#inlineActivityForm').on('submit', function(e) {
                                        e.preventDefault();

                                        var formData = new FormData(this);

                                        $.ajax({
                                            url: $(this).attr('action'),
                                            type: 'POST',
                                            data: formData,
                                            processData: false,
                                            contentType: false,
                                            success: function(response) {
                                                if (response.success) {
                                                    // Reset form and hide it
                                                    $('#inlineActivityForm')[0].reset();
                                                    $('#addActivityForm').collapse('hide');

                                                    // Refresh activity list
                                                    $('#activityList').load('@Url.Action("ActivityList", "PlotCrops", new { plotCropId = Model.Id })');

                                                    alert('Activity saved successfully!');
                                                } else {
                                                    alert('Error saving activity. Please check your inputs.');
                                                }
                                            },
                                            error: function() {
                                                alert('Error saving activity. Please try again.');
                                            }
                                        });
                                    });
                                });
                                                            </script>

                                                            <!-- Helper Functions -->
                                                            @functions {
                                                                string GetStatusBadge(string status)
                                                                {
                                                                    switch (status)
                                                                    {
                                                                        case "Preparation": return "bg-secondary";
                                                                        case "Planting": return "bg-info";
                                                                        case "Growing": return "bg-primary";
                                                                        case "Harvested": return "bg-success";
                                                                        default: return "bg-light text-dark";
                                                                    }
                                                                }

                                                                string GetDaysToMaturity(PlotCrop plotCrop)
                                                                {
                                                                    if (plotCrop.Status == "Harvested") return "Harvest completed";
                                                                    if (!plotCrop.ExpectedMaturityDate.HasValue) return "N/A";

                                                                    var days = (plotCrop.ExpectedMaturityDate.Value - DateTime.Now).Days;
                                                                    return days > 0 ? $"{days} days" : "Ready for harvest";
                                                                }
                                                            }

                                                            @section Styles {
                                                                <style>
                                                                    .activity-feed {
                                                                        max-height: 300px;
                                                                        overflow-y: auto;
                                                                    }

                                                                    .activity-item {
                                                                        border-left: 3px solid #6c757d;
                                                                    }

                                                                    .badge {
                                                                        font-size: 0.9em;
                                                                        padding: 0.35em 0.65em;
                                                                    }
                                                                </style>
                                                            }

                                                            @section Scripts {
                                                                <script>
                                        $(function() {
                                            // Refresh activity list every 30 seconds
                                            setInterval(function() {
                                                $('#activityList').load('@Url.Action("ActivityList", new { plotCropId = Model.Id })');
                                                $('#activityStats').load('@Url.Action("ActivityStats", new { plotCropId = Model.Id })');
                                            }, 30000);

                                            // Handle activity modal form submission
                                            $(document).on('submit', '#activityForm', function(e) {
                                                e.preventDefault();
                                                var formData = new FormData(this);

                                                $.ajax({
                                                    url: $(this).attr('action'),
                                                    type: 'POST',
                                                    data: formData,
                                                    processData: false,
                                                    contentType: false,
                                                    success: function(response) {
                                                        if (response.success) {
                                                            $('#activityModal').modal('hide');
                                                            $('#activityList').load('@Url.Action("ActivityList", new { plotCropId = Model.Id })');
                                                            $('#activityStats').load('@Url.Action("ActivityStats", new { plotCropId = Model.Id })');
                                                        } else {
                                                            $('#activityModalBody').html(response);
                                                        }
                                                    }
                                                });
                                            });

                                            // Initialize tab functionality
                                            $('.nav-tabs a').click(function(e) {
                                                e.preventDefault();
                                                $(this).tab('show');
                                            });
                                        });
                                                                </script>
                                                            }*@
                            @model FarmTrack.Models.PlotCrop
                            @using FarmTrack.Models
                            @using FarmTrack.Helpers

                            @{
                                ViewBag.Title = $"{Model.Crop.Name} in Plot: {Model.Plot.Name}";
                            }

                            <style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-earth: #e5d9cc; /* Light version of earth */
        --color-light-foliage: #e8f5e9; /* Light version of foliage */
        --color-blue: #2196F3; /* Info color */
        --color-orange: #FF9800; /* Warning color */
    }

    body {
        background-color: #f9f7f4;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 20px rgba(101, 67, 33, 0.2);
    }

        .page-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 200px;
            height: 100%;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23F5DEB3" opacity="0.1"><path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/></svg>');
            background-repeat: no-repeat;
            background-position: right center;
            background-size: 150px;
            opacity: 0.2;
        }

        .page-header h1 {
            color: var(--color-white);
            font-weight: 700;
            margin-bottom: 10px;
            font-size: 1.8rem;
        }

        .page-header p {
            color: var(--color-wheat);
            font-size: 1rem;
            margin: 0;
        }

    /* Modern Card Styling */
    .card {
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        border: none;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        overflow: hidden;
        margin-bottom: 25px;
    }

        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
        }

    .card-header {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
        padding: 20px;
        border-bottom: none;
        font-weight: 600;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 10px;
    }

        .card-header h4 {
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
        }

    .card-body {
        padding: 25px;
    }

    /* Status Badges */
    .badge {
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .bg-secondary {
        background-color: #6c757d !important;
    }

    .bg-info {
        background-color: var(--color-blue) !important;
    }

    .bg-primary {
        background-color: var(--color-foliage) !important;
    }

    .bg-success {
        background-color: var(--color-foliage) !important;
    }

    .bg-light {
        background-color: var(--color-wheat) !important;
        color: var(--color-soil) !important;
    }

    /* Enhanced Info Display */
    .info-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

        .info-item:last-child {
            border-bottom: none;
        }

    .info-label {
        font-weight: 600;
        color: var(--color-soil);
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .info-value {
        color: #555;
        font-weight: 500;
    }

    /* Action Buttons */
    .action-button {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: white;
        border: none;
        border-radius: 50px;
        padding: 12px 25px;
        font-weight: 600;
        font-size: 0.9rem;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
    }

        .action-button:hover {
            background: linear-gradient(135deg, #45a049, #3d8b40);
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(76, 175, 80, 0.4);
            color: white;
            text-decoration: none;
        }

    .btn-warning {
        background: linear-gradient(135deg, var(--color-orange), #f57c00);
        box-shadow: 0 4px 12px rgba(255, 152, 0, 0.3);
    }

        .btn-warning:hover {
            background: linear-gradient(135deg, #f57c00, #e65100);
            box-shadow: 0 6px 15px rgba(255, 152, 0, 0.4);
        }

    .btn-sm {
        padding: 8px 16px;
        font-size: 0.8rem;
        min-width: auto;
    }

    /* Tab Navigation */
    .nav-tabs {
        border-bottom: 2px solid var(--color-wheat);
        margin-bottom: 0;
    }

        .nav-tabs .nav-item {
            margin-bottom: 0;
        }

        .nav-tabs .nav-link {
            color: var(--color-soil);
            font-weight: 600;
            border: none;
            border-radius: 8px 8px 0 0;
            padding: 15px 20px;
            background-color: transparent;
            transition: all 0.3s ease;
            margin-right: 5px;
        }

            .nav-tabs .nav-link:hover {
                background-color: var(--color-light-earth);
                color: var(--color-soil);
                border-color: transparent;
            }

            .nav-tabs .nav-link.active {
                background-color: var(--color-earth);
                color: white;
                border-color: var(--color-earth);
                border-bottom-color: var(--color-earth);
            }

    .tab-content {
        padding: 25px;
        background-color: white;
        border-radius: 0 0 12px 12px;
    }

    /* Alert Styling */
    .alert {
        border-radius: 10px;
        padding: 20px;
        border: none;
        margin-bottom: 20px;
    }

    .alert-info {
        background: linear-gradient(135deg, var(--color-light-foliage), #f1f8e9);
        color: var(--color-soil);
        border-left: 5px solid var(--color-foliage);
    }

    .alert-warning {
        background: linear-gradient(135deg, #fff3e0, #ffeaa7);
        color: var(--color-soil);
        border-left: 5px solid var(--color-orange);
    }

        .alert h5 {
            color: var(--color-soil);
            font-weight: 700;
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

    /* Activity Section */
    #activityFormContainer {
        background-color: var(--color-light-foliage);
        border-radius: 10px;
        padding: 20px;
        border-left: 4px solid var(--color-foliage);
    }

    .activity-fields {
        background-color: white;
        padding: 15px;
        border-radius: 8px;
        margin-top: 15px;
        border: 1px solid var(--color-wheat);
    }

    /* Form Controls */
    .form-control, .form-select {
        border: 2px solid var(--color-wheat);
        border-radius: 8px;
        padding: 12px 15px;
        color: var(--color-soil);
        background-color: white;
        transition: all 0.3s ease;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--color-earth);
            box-shadow: 0 0 0 3px rgba(139, 115, 85, 0.1);
            outline: none;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .page-header {
            padding: 20px;
        }

        .page-header h1 {
            font-size: 1.5rem;
        }

        .card-body {
            padding: 20px;
        }

        .nav-tabs .nav-link {
            padding: 12px 15px;
            font-size: 0.9rem;
        }

        .tab-content {
            padding: 20px;
        }
    }

    /* Loading States */
    .loading {
        opacity: 0.6;
        pointer-events: none;
    }

    /* Icon Enhancements */
    .fas, .fa {
        margin-right: 5px;
    }
                            </style>

                            <!-- Page Header -->
                            <div class="page-header">
                                <h1><i class="fas fa-seedling"></i>@Model.Crop.Name in Plot: @Model.Plot.Name</h1>
                                <p>Monitor and manage crop cultivation activities and progress</p>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <!-- Crop Information Card -->
                                    <div class="card">
                                        <div class="card-header">
                                            <i class="fas fa-info-circle"></i>
                                            <h4>Crop Information</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="info-item">
                                                <span class="info-label"><i class="fas fa-flag"></i><strong>Status:</strong></span>
                                                <span class="badge @GetStatusBadge(Model.Status)">@Model.Status</span>
                                            </div>
                                            <div class="info-item">
                                                <span class="info-label"><i class="fas fa-calendar-plus"></i><strong>Planted On:</strong></span>
                                                <span class="info-value">@(Model.DatePlanted?.ToString("d") ?? "Not planted yet")</span>
                                            </div>
                                            <div class="info-item">
                                                <span class="info-label"><i class="fas fa-calendar-check"></i><strong>Expected Maturity:</strong></span>
                                                <span class="info-value">@(Model.ExpectedMaturityDate?.ToString("d") ?? "N/A")</span>
                                            </div>
                                            <div class="info-item">
                                                <span class="info-label"><i class="fas fa-clock"></i><strong>Days to Maturity:</strong></span>
                                                <span class="info-value">@GetDaysToMaturity(Model)</span>
                                            </div>
                                            <div class="info-item">
                                                <span class="info-label"><i class="fas fa-weight-hanging"></i><strong>Expected Yield:</strong></span>
                                                <span class="info-value">@Model.ExpectedYield kg/hectare</span>
                                            </div>

                                            @if (Model.Status == "Preparation")
                                            {
                                                <div class="mt-4">
                                                    @using (Html.BeginForm("StartPlanting", "PlotCrops", FormMethod.Post))
                                                    {
                                                        @Html.AntiForgeryToken()
                                                        <input type="hidden" name="id" value="@Model.Id" />
                                                        <button type="submit" class="action-button w-100">
                                                            <i class="fas fa-play-circle"></i>
                                                            Start Planting Phase
                                                        </button>
                                                    }
                                                </div>
                                            }
                                        </div>
                                    </div>

                                    <!-- Activity Section -->
                                    <div class="card">
                                        <div class="card-header">
                                            <i class="fas fa-list-alt"></i>
                                            <h4>Activity Log</h4>
                                        </div>
                                        <div class="card-body">
                                            <!-- Existing Activities -->
                                            <div id="activityList">
                                                @Html.Action("ActivityList", new { plotCropId = Model.Id })
                                            </div>

                                            <!-- Toggle Button -->
                                            <div class="mt-3">
                                                <button class="action-button btn-sm" id="toggleActivityForm">
                                                    <i class="fas fa-plus"></i> Add New Activity
                                                </button>
                                            </div>

                                            <!-- Inline Form -->
                                            <div id="activityFormContainer" style="display:none; margin-top:15px;">
                                                @Html.Action("ActivityForm", "PlotCrops", new { plotCropId = Model.Id })
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Severity Trends -->
                                    @Html.Action("SeverityTrends", new { plotCropId = Model.Id })
                                </div>

                                <div class="col-md-8">
                                    <div class="card">
                                        <div class="card-header" style="background: white; color: var(--color-soil); padding: 0;">
                                            <ul class="nav nav-tabs card-header-tabs w-100" style="margin: 0; border: none;">
                                                <li class="nav-item">
                                                    <a class="nav-link active" data-toggle="tab" href="#tasks">
                                                        <i class="fas fa-tasks"></i> Tasks
                                                    </a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" data-toggle="tab" href="#growth">
                                                        <i class="fas fa-chart-line"></i> Growth Tracking
                                                    </a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" data-toggle="tab" href="#harvest">
                                                        <i class="fas fa-cut"></i> Harvest
                                                    </a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" data-toggle="tab" href="#analytics">
                                                        <i class="fas fa-analytics"></i> Analytics
                                                    </a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="card-body" style="padding: 0;">
                                            <div class="tab-content">
                                                <div class="tab-pane active" id="tasks">
                                                    @Html.Action("TaskList", "PlotCrops", new { plotCropId = Model.Id })
                                                </div>
                                                <div class="tab-pane" id="growth">
                                                    @if (Model.Status != "Preparation")
                                                    {
                                                        @Html.Action("GrowthRecords", "PlotCrops", new { id = Model.Id })
                                                    }
                                                    else
                                                    {
                                                        <div class="alert alert-info">
                                                            <i class="fas fa-info-circle"></i>
                                                            <strong>Growth Tracking Unavailable</strong>
                                                            <p>Growth tracking will be available after planting begins.</p>
                                                        </div>
                                                    }
                                                </div>
                                                <div class="tab-pane" id="harvest">
                                                    @if (Model.Status == "Harvested")
                                                    {
                                                        @Html.Action("HarvestAnalytics", "PlotCrops", new { id = Model.Id })
                                                    }
                                                    else
                                                    {
                                                        if (Model.ExpectedMaturityDate.HasValue)
                                                        {
                                                            <div class="alert alert-info">
                                                                <h5><i class="fas fa-calendar-alt"></i>Harvest Schedule</h5>
                                                                <p><strong>Estimated harvest date:</strong> @Model.ExpectedMaturityDate.Value.ToString("d")</p>
                                                                <p><strong>Days remaining:</strong> @((Model.ExpectedMaturityDate.Value - DateTime.Now).Days) days</p>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="alert alert-info">
                                                                <h5><i class="fas fa-info-circle"></i>Harvest Information</h5>
                                                                <p>Harvest information will be available once planting begins.</p>
                                                            </div>
                                                        }

                                                        <!-- Always show Ready to Harvest option -->
                                                        <div class="alert alert-warning">
                                                            <h5><i class="fas fa-exclamation-triangle"></i>Ready to Harvest?</h5>
                                                            <p>
                                                                You can start harvesting at any time — even before the expected maturity date —
                                                                if your crops are spoiled, damaged by pests/weather, or have matured earlier than expected.
                                                            </p>

                                                            @using (Html.BeginForm("StartHarvest", "PlotCrops", FormMethod.Post))
                                                            {
                                                                @Html.AntiForgeryToken()
                                                                <input type="hidden" name="id" value="@Model.Id" />
                                                                <button type="submit" class="action-button btn-warning">
                                                                    <i class="fas fa-cut"></i>
                                                                    Begin Harvest Process
                                                                </button>
                                                            }
                                                        </div>
                                                    }
                                                </div>

                                                <div class="tab-pane" id="analytics">
                                                    @Html.Action("HarvestAnalytics", "PlotCrops", new { plotCropId = Model.Id })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            @functions {
                                string GetStatusBadge(string status)
                                {
                                    switch (status)
                                    {
                                        case "Preparation": return "bg-secondary";
                                        case "Planting": return "bg-info";
                                        case "Growing": return "bg-primary";
                                        case "Harvested": return "bg-success";
                                        default: return "bg-light text-dark";
                                    }
                                }

                                string GetDaysToMaturity(PlotCrop plotCrop)
                                {
                                    if (plotCrop.Status == "Harvested") return "Harvest completed";
                                    if (!plotCrop.ExpectedMaturityDate.HasValue) return "N/A";

                                    var days = (plotCrop.ExpectedMaturityDate.Value - DateTime.Now).Days;
                                    return days > 0 ? $"{days} days" : "Ready for harvest";
                                }
                            }

                            <!-- Font Awesome for Icons -->
                            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

                            @section Scripts {
                                <script>
$(function () {
    // Toggle inline form
    $('#toggleActivityForm').click(function () {
        $('#activityFormContainer').slideToggle();
        var icon = $(this).find('i');
        if (icon.hasClass('fa-plus')) {
            icon.removeClass('fa-plus').addClass('fa-minus');
            $(this).html('<i class="fas fa-minus"></i> Hide Form');
        } else {
            icon.removeClass('fa-minus').addClass('fa-plus');
            $(this).html('<i class="fas fa-plus"></i> Add New Activity');
        }
    });

    // Form submit
    $(document).on('submit', '#activityForm', function (e) {
        e.preventDefault();
        var formData = new FormData(this);
        var $form = $(this);
        var $container = $('#activityFormContainer');

        // Add loading state
        $container.addClass('loading');
        $form.find('button[type="submit"]').html('<i class="fas fa-spinner fa-spin"></i> Saving...');

        $.ajax({
            url: $(this).attr('action'),
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    $('#activityList').load('@Url.Action("ActivityList", new { plotCropId = Model.Id })');
                    $('#activityStats').load('@Url.Action("ActivityStats", new { plotCropId = Model.Id })');
                    $('#activityForm')[0].reset();
                    $('#activityFormContainer').slideUp();
                    $('#toggleActivityForm').html('<i class="fas fa-plus"></i> Add New Activity');

                    // Show success message
                    var successMsg = $('<div class="alert alert-success" style="position: fixed; top: 20px; right: 20px; z-index: 9999;"><i class="fas fa-check-circle"></i> Activity added successfully!</div>');
                    $('body').append(successMsg);
                    setTimeout(function() {
                        successMsg.fadeOut();
                    }, 3000);
                } else {
                    $('#activityFormContainer').html(response);
                }
            },
            error: function() {
                alert('An error occurred while saving the activity.');
            },
            complete: function() {
                $container.removeClass('loading');
            }
        });
    });

    // Trigger conditional fields when ActivityType changes
    $(document).on('change', '#ActivityType', function () {
        var type = $(this).val();
        $('.activity-fields').hide();
        $('.activity-fields input, .activity-fields select').val('');

        if (type === "Fertilization") {
            $('#fertilizationFields').show();
        } else if (type === "Pest" || type === "Disease") {
            $('#pestDiseaseFields').show();
        } else if (type === "GrowthRecording") {
            $('#growthFields').show();
        }
    });

    // Fire once on load
    $('#ActivityType').trigger('change');

    // Enhanced tab switching with icons
    $('.nav-tabs a').on('shown.bs.tab', function (e) {
        var target = $(e.target).attr("href");
        var icon = $(e.target).find('i');

        // Add a subtle animation to the active tab
        $(target).hide().fadeIn(300);
    });
});
                                </script>
                            }