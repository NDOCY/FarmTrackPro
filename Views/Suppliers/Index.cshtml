@model IEnumerable<FarmTrack.Models.Supplier>
@{
    ViewBag.Title = "Suppliers";
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-gray: #f8f9fa; /* Light background */
        --color-info: #17a2b8; /* Info */
        --color-success: #28a745; /* Success */
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--color-wheat), #f0e5c7);
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 30px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(139, 115, 85, 0.2);
        position: relative;
        overflow: hidden;
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--color-earth), var(--color-foliage));
    }

    .page-header h2 {
        color: var(--color-soil);
        font-weight: 700;
        margin-bottom: 10px;
        display: flex;
        align-items: center;
        gap: 15px;
        font-size: 2.2rem;
    }

    .page-header .subtitle {
        color: var(--color-earth);
        font-size: 1.1rem;
        font-weight: 500;
        margin: 0;
        opacity: 0.8;
    }

    /* Action Bar */
    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding: 20px;
        background: linear-gradient(135deg, rgba(245, 222, 179, 0.1), rgba(245, 222, 179, 0.05));
        border-radius: 12px;
        border: 1px solid var(--color-wheat);
    }

    .search-container {
        display: flex;
        align-items: center;
        gap: 15px;
        flex: 1;
        max-width: 400px;
    }

    .search-box {
        position: relative;
        flex: 1;
    }

    .search-input {
        width: 100%;
        padding: 12px 20px 12px 45px;
        border: 2px solid var(--color-wheat);
        border-radius: 25px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background: var(--color-white);
    }

    .search-input:focus {
        outline: none;
        border-color: var(--color-earth);
        box-shadow: 0 0 15px rgba(139, 115, 85, 0.2);
        transform: translateY(-2px);
    }

    .search-icon {
        position: absolute;
        left: 15px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--color-earth);
        font-size: 1.2rem;
    }

    /* Button Styling */
    .btn {
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        font-size: 1rem;
        border: none;
        position: relative;
        overflow: hidden;
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: width 0.6s, height 0.6s;
    }

    .btn:hover::before {
        width: 300px;
        height: 300px;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
        box-shadow: 0 4px 15px rgba(139, 115, 85, 0.3);
    }

    .btn-primary:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 25px rgba(139, 115, 85, 0.4);
        text-decoration: none;
        color: var(--color-white);
    }

    .btn-sm {
        padding: 8px 16px;
        font-size: 0.9rem;
        border-radius: 6px;
    }

    .btn-success {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: var(--color-white);
        box-shadow: 0 4px 15px rgba(76, 175, 80, 0.3);
    }

    .btn-success:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(76, 175, 80, 0.4);
        text-decoration: none;
        color: var(--color-white);
    }

    .btn-info {
        background: linear-gradient(135deg, var(--color-info), #138496);
        color: var(--color-white);
        box-shadow: 0 4px 15px rgba(23, 162, 184, 0.3);
    }

    .btn-info:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(23, 162, 184, 0.4);
        text-decoration: none;
        color: var(--color-white);
    }

    .btn-danger {
        background: linear-gradient(135deg, var(--color-danger), #e55353);
        color: var(--color-white);
        box-shadow: 0 4px 15px rgba(255, 107, 107, 0.3);
    }

    .btn-danger:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(255, 107, 107, 0.4);
        text-decoration: none;
        color: var(--color-white);
    }

    /* Table Container */
    .table-container {
        background: var(--color-white);
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        border: 1px solid var(--color-wheat);
    }

    .table-header {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
        padding: 20px 25px;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .table-title {
        display: flex;
        align-items: center;
        gap: 12px;
        font-weight: 700;
        font-size: 1.3rem;
    }

    .table-count {
        background: rgba(255, 255, 255, 0.2);
        padding: 5px 12px;
        border-radius: 15px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    /* Enhanced Table */
    .enhanced-table {
        width: 100%;
        border-collapse: collapse;
        margin: 0;
    }

    .enhanced-table thead {
        background: linear-gradient(135deg, rgba(245, 222, 179, 0.3), rgba(245, 222, 179, 0.1));
    }

    .enhanced-table th {
        padding: 20px 25px;
        text-align: left;
        font-weight: 700;
        color: var(--color-soil);
        font-size: 1rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        border-bottom: 2px solid var(--color-wheat);
        position: relative;
    }

    .enhanced-table th:first-child {
        border-radius: 0;
    }

    .enhanced-table th:last-child {
        border-radius: 0;
    }

    .enhanced-table tbody tr {
        transition: all 0.3s ease;
        border-bottom: 1px solid rgba(245, 222, 179, 0.3);
    }

    .enhanced-table tbody tr:hover {
        background: linear-gradient(135deg, rgba(245, 222, 179, 0.1), rgba(245, 222, 179, 0.05));
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    .enhanced-table td {
        padding: 20px 25px;
        vertical-align: middle;
        color: var(--color-soil);
        font-size: 1rem;
        line-height: 1.4;
    }

    /* Supplier Card Style */
    .supplier-name {
        font-weight: 700;
        color: var(--color-earth);
        font-size: 1.2rem;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .supplier-name::before {
        content: '';
        width: 8px;
        height: 8px;
        background: var(--color-foliage);
        border-radius: 50%;
        box-shadow: 0 0 10px rgba(76, 175, 80, 0.5);
        animation: pulse 2s infinite;
    }

    @@keyframes pulse {
        0% { transform: scale(1); opacity: 1; }
        50% { transform: scale(1.2); opacity: 0.7; }
        100% { transform: scale(1); opacity: 1; }
    }

    .contact-info {
        display: flex;
        align-items: center;
        gap: 8px;
        color: var(--color-soil);
        font-weight: 500;
    }

    .contact-info i {
        color: var(--color-earth);
        width: 16px;
    }

    /* Action Buttons Container */
    .action-buttons {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
        justify-content: center;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: var(--color-soil);
    }

    .empty-icon {
        font-size: 4rem;
        color: var(--color-wheat);
        margin-bottom: 20px;
    }

    .empty-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: var(--color-earth);
    }

    .empty-subtitle {
        font-size: 1rem;
        opacity: 0.7;
        margin-bottom: 30px;
    }

    /* Stats Cards */
    .stats-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stats-card {
        background: linear-gradient(135deg, var(--color-foliage), #45a049);
        color: var(--color-white);
        padding: 25px;
        border-radius: 12px;
        text-align: center;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        position: relative;
        overflow: hidden;
    }

    .stats-card::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        transform: rotate(45deg);
        transition: all 0.5s;
    }

    .stats-card:hover::before {
        animation: shimmer 1.5s ease-in-out;
    }

    @@keyframes shimmer {
        0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
        100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
    }

    .stats-number {
        font-size: 2.5rem;
        font-weight: 700;
        display: block;
        margin-bottom: 8px;
    }

    .stats-label {
        font-size: 1rem;
        opacity: 0.9;
        text-transform: uppercase;
        letter-spacing: 1px;
        font-weight: 600;
    }

    /* Responsive Design */
    @@media (max-width: 992px) {
        .action-bar {
            flex-direction: column;
            gap: 20px;
            align-items: stretch;
        }

        .search-container {
            max-width: none;
        }

        .enhanced-table {
            font-size: 0.9rem;
        }

        .enhanced-table th,
        .enhanced-table td {
            padding: 15px 12px;
        }
    }

    @@media (max-width: 768px) {
        .enhanced-table thead {
            display: none;
        }

        .enhanced-table tr {
            display: block;
            margin-bottom: 20px;
            background: var(--color-white);
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border: 1px solid var(--color-wheat);
            overflow: hidden;
        }

        .enhanced-table td {
            display: block;
            text-align: left;
            border: none;
            padding: 15px 20px;
            position: relative;
            padding-left: 40%;
        }

        .enhanced-table td:before {
            content: attr(data-label);
            position: absolute;
            left: 20px;
            width: 35%;
            text-align: left;
            font-weight: 700;
            color: var(--color-earth);
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }

        .action-buttons {
            justify-content: flex-start;
            padding-left: 0;
        }
    }

    /* Animations */
    .table-container {
        animation: slideUp 0.6s ease-out;
    }

    .stats-row {
        animation: slideUp 0.8s ease-out;
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<!-- Page Header -->
<div class="page-header">
    <h2>
        <i class="fas fa-truck"></i>
        Supplier Management
    </h2>
    <p class="subtitle">Manage your agricultural supply chain partners</p>
</div>

<!-- Statistics Row -->
<div class="stats-row">
    <div class="stats-card">
        <span class="stats-number" id="totalSuppliers">@(Model?.Count() ?? 0)</span>
        <div class="stats-label">Total Suppliers</div>
    </div>
</div>

<!-- Action Bar -->
<div class="action-bar">
    <div class="search-container">
        <div class="search-box">
            <i class="fas fa-search search-icon"></i>
            <input type="text" class="search-input" placeholder="Search suppliers..." id="searchInput">
        </div>
    </div>
    @Html.ActionLink("Add New Supplier", "Create", null, new { @class = "btn btn-primary" })
</div>

<!-- Table Container -->
<div class="table-container">
    <div class="table-header">
        <div class="table-title">
            <i class="fas fa-list"></i>
            Suppliers Directory
        </div>
        <div class="table-count">
            <span id="visibleCount">@(Model?.Count() ?? 0)</span> suppliers
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <table class="enhanced-table" id="suppliersTable">
            <thead>
                <tr>
                    <th>
                        <i class="fas fa-building"></i>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        <i class="fas fa-user"></i>
                        @Html.DisplayNameFor(model => model.ContactPerson)
                    </th>
                    <th>
                        <i class="fas fa-phone"></i>
                        @Html.DisplayNameFor(model => model.PhoneNumber)
                    </th>
                    <th>
                        <i class="fas fa-envelope"></i>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        <i class="fas fa-map-marker-alt"></i>
                        @Html.DisplayNameFor(model => model.Address)
                    </th>
                    <th>
                        <i class="fas fa-cogs"></i>
                        Actions
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="supplier-row">
                        <td data-label="Company Name">
                            <div class="supplier-name">
                                @Html.DisplayFor(modelItem => item.Name)
                            </div>
                        </td>
                        <td data-label="Contact Person">
                            <div class="contact-info">
                                <i class="fas fa-user"></i>
                                @Html.DisplayFor(modelItem => item.ContactPerson)
                            </div>
                        </td>
                        <td data-label="Phone">
                            <div class="contact-info">
                                <i class="fas fa-phone"></i>
                                <a href="tel:@Html.DisplayFor(modelItem => item.PhoneNumber)" style="color: inherit; text-decoration: none;">
                                    @Html.DisplayFor(modelItem => item.PhoneNumber)
                                </a>
                            </div>
                        </td>
                        <td data-label="Email">
                            <div class="contact-info">
                                <i class="fas fa-envelope"></i>
                                <a href="mailto:@Html.DisplayFor(modelItem => item.Email)" >
                                </a>
                            </div>
                        </td>
                        <td data-label="Address">
                            <div class="contact-info">
                                <i class="fas fa-map-marker-alt"></i>
                                @Html.DisplayFor(modelItem => item.Address)
                            </div>
                        </td>
                        <td data-label="Actions">
                            <div class="action-buttons">
                                @Html.ActionLink(" ", "Edit", new { id = item.SupplierId }, new { @class = "btn btn-success btn-sm", title = "Edit Supplier" })
                                @Html.ActionLink(" ", "Details", new { id = item.SupplierId }, new { @class = "btn btn-info btn-sm", title = "View Details" })
                                @Html.ActionLink(" ", "Delete", new { id = item.SupplierId }, new { @class = "btn btn-danger btn-sm", title = "Delete Supplier" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-truck"></i>
            </div>
            <div class="empty-title">No Suppliers Found</div>
            <div class="empty-subtitle">Start building your supply chain by adding your first supplier</div>
            @Html.ActionLink("Add Your First Supplier", "Create", null, new { @class = "btn btn-primary" })
        </div>
    }
</div>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<script>
    // Search functionality
    document.getElementById('searchInput').addEventListener('keyup', function() {
        const searchTerm = this.value.toLowerCase();
        const rows = document.querySelectorAll('.supplier-row');
        let visibleCount = 0;

        rows.forEach(row => {
            const text = row.textContent.toLowerCase();
            if (text.includes(searchTerm)) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });

        document.getElementById('visibleCount').textContent = visibleCount;
    });

    // Add icons to action buttons
    document.addEventListener('DOMContentLoaded', function() {
        // Add icons to Edit buttons
        const editButtons = document.querySelectorAll('a[href*="/Edit"]');
        editButtons.forEach(btn => {
            btn.innerHTML = '<i class="fas fa-edit"></i>';
        });

        // Add icons to Details buttons
        const detailButtons = document.querySelectorAll('a[href*="/Details"]');
        detailButtons.forEach(btn => {
            btn.innerHTML = '<i class="fas fa-eye"></i>';
        });

        // Add icons to Delete buttons
        const deleteButtons = document.querySelectorAll('a[href*="/Delete"]');
        deleteButtons.forEach(btn => {
            btn.innerHTML = '<i class="fas fa-trash"></i>';
        });
    });
</script>