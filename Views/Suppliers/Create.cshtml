@model FarmTrack.Models.Supplier
@{
    ViewBag.Title = "Create Supplier";
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-gray: #f8f9fa; /* Light background */
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--color-wheat), #f0e5c7);
        padding: 25px;
        border-radius: 12px;
        margin-bottom: 30px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        border: 1px solid rgba(139, 115, 85, 0.2);
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .page-header p.lead {
            color: var(--color-soil);
            opacity: 0.8;
            margin-bottom: 0;
            font-size: 1.1rem;
        }

    /* Form Container */
    .form-container {
        background-color: var(--color-white);
        border: 1px solid var(--color-wheat);
        border-radius: 12px;
        padding: 30px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        max-width: 800px;
        margin: 0 auto;
        position: relative;
        overflow: hidden;
    }

    .form-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--color-earth), var(--color-foliage));
    }

    /* Form Styling */
    .form-group {
        margin-bottom: 25px;
        position: relative;
    }

        .form-group label {
            color: var(--color-soil);
            font-weight: 600;
            display: block;
            margin-bottom: 8px;
            font-size: 1rem;
        }

    /* Input Group Styling */
    .input-group {
        position: relative;
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
        width: 100%;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        border-radius: 8px;
        overflow: hidden;
        transition: all 0.3s ease;
    }

    .input-group:focus-within {
        box-shadow: 0 4px 15px rgba(139, 115, 85, 0.2);
        transform: translateY(-1px);
    }

    .input-group-prepend {
        display: flex;
        margin-right: -1px;
    }

    .input-group-text {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 12px 15px;
        margin-bottom: 0;
        font-size: 1rem;
        font-weight: 500;
        line-height: 1.5;
        color: var(--color-white);
        text-align: center;
        white-space: nowrap;
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        border: none;
        border-radius: 8px 0 0 8px;
        min-width: 50px;
    }

    .form-control {
        border: none;
        border-radius: 0 8px 8px 0;
        padding: 12px 15px;
        width: 100%;
        font-size: 1rem;
        background-color: var(--color-white);
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border: none;
            box-shadow: none;
            outline: none;
            background-color: #fefefe;
        }

        .form-control::placeholder {
            color: #999;
            font-style: italic;
        }

    /* Button Styling */
    .btn {
        border-radius: 8px;
        padding: 12px 24px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-size: 1rem;
        border: none;
        position: relative;
        overflow: hidden;
    }

    .btn::before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition: width 0.6s, height 0.6s;
    }

    .btn:hover::before {
        width: 300px;
        height: 300px;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
        box-shadow: 0 4px 15px rgba(139, 115, 85, 0.3);
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(139, 115, 85, 0.4);
        }

    .btn-secondary {
        background: linear-gradient(135deg, #6c757d, #5a6268);
        color: var(--color-white);
        box-shadow: 0 4px 15px rgba(108, 117, 125, 0.3);
    }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(108, 117, 125, 0.4);
        }

    /* Validation Styling */
    .field-validation-error {
        color: var(--color-danger);
        font-size: 0.875rem;
        margin-top: 8px;
        display: block;
        font-weight: 500;
        animation: shake 0.5s ease-in-out;
    }

    @@keyframes shake {
        0%, 100% { transform: translateX(0); }
        25% { transform: translateX(-5px); }
        75% { transform: translateX(5px); }
    }

    .validation-summary-errors {
        color: var(--color-danger);
        background: linear-gradient(135deg, rgba(255, 107, 107, 0.1), rgba(255, 107, 107, 0.05));
        border: 2px solid var(--color-danger);
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 25px;
        animation: fadeIn 0.5s ease-in-out;
    }

    @@keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }

        .validation-summary-errors ul {
            margin-bottom: 0;
            padding-left: 20px;
        }

    /* Action Buttons Container */
    .action-buttons {
        display: flex;
        gap: 15px;
        margin-top: 30px;
        justify-content: space-between;
        align-items: center;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .form-container {
            margin: 0 15px;
            padding: 20px;
        }

        .action-buttons {
            flex-direction: column-reverse;
            gap: 10px;
        }

        .btn {
            width: 100%;
            justify-content: center;
        }
    }

    /* Form Animation */
    .form-container {
        animation: slideUp 0.6s ease-out;
    }

    @@keyframes slideUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Back to List Link Styling */
    .back-link {
        display: inline-flex;
        align-items: center;
        gap: 8px;
        color: var(--color-earth);
        text-decoration: none;
        font-weight: 500;
        margin-top: 20px;
        padding: 8px 16px;
        border-radius: 6px;
        transition: all 0.3s ease;
    }

        .back-link:hover {
            background-color: rgba(139, 115, 85, 0.1);
            color: var(--color-soil);
            text-decoration: none;
        }
</style>

<!-- Page Header -->
<div class="page-header">
    <h2>
        <i class="fas fa-truck"></i>
        Create New Supplier
    </h2>
    <p class="lead">Add a new supplier to your farm's network</p>
</div>

<div class="form-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "validation-summary-errors" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Supplier Name")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-building"></i></span>
                </div>
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter supplier company name" } })
            </div>
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContactPerson, "Contact Person")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-user"></i></span>
                </div>
                @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter contact person's name" } })
            </div>
            @Html.ValidationMessageFor(model => model.ContactPerson, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, "Phone Number")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-phone"></i></span>
                </div>
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter phone number", type = "tel" } })
            </div>
            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Email Address")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                </div>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter email address", type = "email" } })
            </div>
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, "Business Address")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-map-marker-alt"></i></span>
                </div>
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter complete business address" } })
            </div>
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "field-validation-error" })
        </div>

        <div class="action-buttons">
            @Html.ActionLink("Back to List", "Index", null, new { @class = "back-link" })
            <div>
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i>
                    Create Supplier
                </button>
            </div>
        </div>
    }
</div>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

@Scripts.Render("~/bundles/jqueryval")