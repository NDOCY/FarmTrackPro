@model IEnumerable<FarmTrack.Models.Crop>

@{
    ViewBag.Title = "Crops Management";
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-earth: #e5d9cc; /* Light version of earth */
        --color-light-foliage: #e8f5e9; /* Light version of foliage */
    }

    body {
        background-color: #f9f7f4;
    }

    /* Dashboard Header */
    .dashboard-header {
        background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 20px rgba(101, 67, 33, 0.2);
    }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 250px;
            height: 100%;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23F5DEB3" opacity="0.1"><path d="M11 7L6 12l5 5v-3h5v-4h-5V7zm1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/></svg>');
            background-repeat: no-repeat;
            background-position: right center;
            background-size: 180px;
            opacity: 0.2;
        }

        .dashboard-header h1 {
            color: var(--color-white);
            font-weight: 700;
            margin-bottom: 10px;
            font-size: 2.2rem;
        }

        .dashboard-header p {
            color: var(--color-wheat);
            font-size: 1.2rem;
            max-width: 600px;
        }

    .dashboard-stats {
        display: flex;
        gap: 20px;
        margin-top: 20px;
    }

    .stat-card {
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 12px 20px;
        min-width: 150px;
    }

        .stat-card .stat-value {
            color: var(--color-white);
            font-size: 1.8rem;
            font-weight: 700;
        }

        .stat-card .stat-label {
            color: var(--color-wheat);
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

    /* Action Button */
    .action-button {
        background-color: var(--color-foliage);
        color: white;
        border: none;
        border-radius: 50px;
        padding: 12px 25px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
        transition: all 0.3s ease;
        text-decoration: none;
        margin-bottom: 30px;
    }

        .action-button:hover {
            background-color: #3d8b40;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(76, 175, 80, 0.4);
            color: white;
        }

    /* Search Box */
    .search-container {
        background-color: white;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 25px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .search-box {
        position: relative;
        max-width: 400px;
    }

        .search-box input {
            width: 100%;
            padding: 12px 15px 12px 45px;
            border-radius: 8px;
            border: 2px solid var(--color-wheat);
            color: var(--color-soil);
            font-size: 1rem;
            transition: all 0.3s ease;
        }

            .search-box input:focus {
                outline: none;
                border-color: var(--color-earth);
                box-shadow: 0 0 0 3px rgba(139, 115, 85, 0.1);
            }

        .search-box i {
            position: absolute;
            left: 15px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--color-earth);
            font-size: 1.1rem;
        }

    /* Modern Table Styling */
    .modern-table-container {
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 30px;
    }

    .table {
        margin-bottom: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table thead th {
            background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
            color: var(--color-white);
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.85rem;
            padding: 20px 15px;
            border: none;
            position: sticky;
            top: 0;
            z-index: 10;
        }

            .table thead th:first-child {
                border-top-left-radius: 12px;
            }

            .table thead th:last-child {
                border-top-right-radius: 12px;
            }

        .table tbody tr {
            transition: all 0.2s ease;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

            .table tbody tr:hover {
                background-color: var(--color-light-earth);
                transform: translateY(-1px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

            .table tbody tr:last-child {
                border-bottom: none;
            }

        .table td {
            padding: 18px 15px;
            vertical-align: middle;
            color: var(--color-soil);
            font-weight: 500;
        }

    /* Enhanced Data Display */
    .crop-name {
        font-weight: 700;
        color: var(--color-foliage);
        font-size: 1.1rem;
    }

    .scientific-name {
        font-style: italic;
        color: var(--color-earth);
        font-weight: 500;
        background-color: var(--color-light-earth);
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9rem;
    }

    .variety-badge {
        background-color: var(--color-light-foliage);
        color: var(--color-foliage);
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    /* Action Links */
    .action-links {
        display: flex;
        gap: 8px;
        align-items: center;
    }

    .action-link {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 35px;
        height: 35px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 600;
        transition: all 0.2s ease;
        color: white;
    }

    .action-edit {
        background-color: var(--color-wheat);
        color: var(--color-soil) !important;
    }

        .action-edit:hover {
            background-color: var(--color-earth);
            color: white !important;
            transform: translateY(-2px);
        }

    .action-details {
        background-color: var(--color-foliage);
    }

        .action-details:hover {
            background-color: #3d8b40;
            transform: translateY(-2px);
        }

    .action-delete {
        background-color: var(--color-danger);
    }

        .action-delete:hover {
            background-color: #e53e3e;
            transform: translateY(-2px);
        }

    /* Card View for Mobile */
    .crops-cards {
        display: none;
        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .crop-card {
        background-color: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        border-left: 4px solid var(--color-foliage);
    }

        .crop-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.12);
        }

    .crop-card-header {
        margin-bottom: 15px;
    }

    .crop-card-title {
        color: var(--color-foliage);
        font-size: 1.2rem;
        font-weight: 700;
        margin-bottom: 5px;
    }

    .crop-card-scientific {
        font-style: italic;
        color: var(--color-earth);
        font-size: 0.9rem;
    }

    .crop-card-variety {
        margin-bottom: 15px;
    }

    .crop-card-actions {
        display: flex;
        gap: 10px;
    }

    .crop-card .action-link {
        flex: 1;
        height: 40px;
        border-radius: 8px;
        font-size: 0.9rem;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 50px 20px;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }

    .empty-illustration {
        max-width: 200px;
        margin: 0 auto 20px;
        opacity: 0.7;
    }

    .empty-state h3 {
        color: var(--color-soil);
        margin-bottom: 10px;
    }

    .empty-state p {
        color: #777;
        margin-bottom: 20px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .dashboard-stats {
            flex-direction: column;
            gap: 10px;
        }

        .modern-table-container {
            display: none;
        }

        .crops-cards {
            display: grid;
        }

        .dashboard-header {
            padding: 20px;
        }

        .dashboard-header h1 {
            font-size: 1.8rem;
        }
    }

    /* Loading Animation */
    .loading-skeleton {
        background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
    }

    @@keyframes loading {
        0% { background-position: 200% 0; }
        100% { background-position: -200% 0; }
    }
</style>

<!-- Dashboard Header -->
<div class="dashboard-header">
    <h1><i class="fas fa-seedling me-2"></i>Crops Management</h1>
    <p>Manage your crop varieties, scientific classifications, and agricultural data</p>

    <div class="dashboard-stats">
        <div class="stat-card">
            <div class="stat-value">@Model.Count()</div>
            <div class="stat-label">Total Crops</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Select(c => c.Name).Distinct().Count()</div>
            <div class="stat-label">Unique Types</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Select(c => c.Variety).Distinct().Count()</div>
            <div class="stat-label">Varieties</div>
        </div>
    </div>
</div>

<!-- Create New Button -->
@Html.ActionLink("Create New Crop", "Create", null, new { @class = "action-button" })
<i class="fas fa-plus-circle"></i>

<!-- Search Box -->
<div class="search-container">
    <div class="search-box">
        <i class="fas fa-search"></i>
        <input type="text" id="cropSearch" placeholder="Search crops by name, variety, or scientific name...">
    </div>
</div>

@if (Model.Any())
{
    <!-- Desktop Table View -->
    <div class="modern-table-container">
        <table class="table">
            <thead>
                <tr>
                    <th><i class="fas fa-flask me-2"></i>@Html.DisplayNameFor(model => model.CropRequirement.ScientificName)</th>
                    <th><i class="fas fa-seedling me-2"></i>@Html.DisplayNameFor(model => model.Name)</th>
                    <th><i class="fas fa-tags me-2"></i>@Html.DisplayNameFor(model => model.Variety)</th>
                    <th><i class="fas fa-cogs me-2"></i>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="crop-row">
                        <td>
                            <span class="scientific-name">
                                @Html.DisplayFor(modelItem => item.CropRequirement.ScientificName)
                            </span>
                        </td>
                        <td>
                            <span class="crop-name">
                                @Html.DisplayFor(modelItem => item.Name)
                            </span>
                        </td>
                        <td>
                            <span class="variety-badge">
                                @Html.DisplayFor(modelItem => item.Variety)
                            </span>
                        </td>
                        <td>
                            <div class="action-links">
                                @Html.ActionLink(" ", "Edit", new { id = item.Id }, new
                                {
                                    @class = "action-link action-edit",
                                    title = "Edit Crop",
                                    @data_toggle = "tooltip"
                                })
                                <i class="fas fa-edit"></i>
                                @Html.ActionLink(" ", "Details", new { id = item.Id }, new
                                {
                                    @class = "action-link action-details",
                                    title = "View Details",
                                    @data_toggle = "tooltip"
                                })
                                <i class="fas fa-eye"></i>
                                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new
                                {
                                    @class = "action-link action-delete",
                                    title = "Delete Crop",
                                    @data_toggle = "tooltip"
                                })
                                <i class="fas fa-trash"></i>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Mobile Card View -->
    <div class="crops-cards">
        @foreach (var item in Model)
        {
            <div class="crop-card">
                <div class="crop-card-header">
                    <div class="crop-card-title">@Html.DisplayFor(modelItem => item.Name)</div>
                    <div class="crop-card-scientific">@Html.DisplayFor(modelItem => item.CropRequirement.ScientificName)</div>
                </div>

                <div class="crop-card-variety">
                    <span class="variety-badge">@Html.DisplayFor(modelItem => item.Variety)</span>
                </div>

                <div class="crop-card-actions">
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "action-link action-edit" })
                    @Html.ActionLink("View", "Details", new { id = item.Id }, new { @class = "action-link action-details" })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "action-link action-delete" })
                </div>
            </div>
        }
    </div>
}
else
{
    <!-- Empty State -->
    <div class="empty-state">
        <div class="empty-illustration">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="#8B7355">
                <path d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z" />
            </svg>
        </div>
        <h3>No Crops Found</h3>
        <p>Start building your crop database by adding your first crop variety with its scientific classification and growing requirements.</p>
        @Html.ActionLink("Add First Crop", "Create", null, new { @class = "action-button" })
        <i class="fas fa-plus-circle"></i>
    </div>
}

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Search functionality
        const searchInput = document.getElementById('cropSearch');
        const tableRows = document.querySelectorAll('.crop-row');
        const cropCards = document.querySelectorAll('.crop-card');

        if (searchInput) {
            searchInput.addEventListener('input', function() {
                const searchTerm = this.value.toLowerCase();

                // Filter table rows
                tableRows.forEach(row => {
                    const rowText = row.textContent.toLowerCase();
                    const isVisible = rowText.includes(searchTerm);
                    row.style.display = isVisible ? '' : 'none';
                });

                // Filter cards
                cropCards.forEach(card => {
                    const cardText = card.textContent.toLowerCase();
                    const isVisible = cardText.includes(searchTerm);
                    card.style.display = isVisible ? '' : 'none';
                });
            });
        }

        // Add loading animation for better UX
        const actionLinks = document.querySelectorAll('.action-link');
        actionLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                if (this.href && !this.href.includes('Delete')) {
                    const icon = this.querySelector('i');
                    if (icon) {
                        icon.className = 'fas fa-spinner fa-spin';
                    }
                }
            });
        });

        // Initialize tooltips if Bootstrap is available
        if (typeof bootstrap !== 'undefined') {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        }
    });
</script>