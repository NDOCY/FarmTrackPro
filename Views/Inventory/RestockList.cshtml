@model IEnumerable<FarmTrack.Models.InventoryRestock>
@{
    ViewBag.Title = "Inventory Restocks";
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-bib: #b17474; /* Neutral */
        --color-light-earth: rgba(139, 115, 85, 0.1);
        --color-shadow: rgba(0, 0, 0, 0.15);
        --color-success: #28a745;
        --color-warning: #ffc107;
        --color-info: #17a2b8;
    }

    /* Page Container */
    .page-container {
        padding: 20px;
        background: linear-gradient(135deg, #f8f9fa, #e9ecef);
        min-height: 100vh;
    }

    /* Alert Styling */
    .alert {
        border: none;
        border-radius: 10px;
        padding: 15px 20px;
        margin-bottom: 25px;
        box-shadow: 0 4px 15px var(--color-shadow);
        display: flex;
        align-items: center;
        gap: 12px;
        animation: slideInDown 0.5s ease-out;
    }

    .alert-info {
        background: linear-gradient(135deg, rgba(23, 162, 184, 0.1), rgba(23, 162, 184, 0.05));
        border-left: 4px solid var(--color-info);
        color: var(--color-soil);
    }

    .alert-info::before {
        content: '\f05a';
        font-family: 'Font Awesome 5 Free';
        font-weight: 900;
        color: var(--color-info);
        font-size: 1.2em;
    }

    /* Page Header */
    .page-header {
        background: linear-gradient(135deg, var(--color-wheat), #f0e6c7);
        padding: 30px;
        border-radius: 15px;
        margin-bottom: 25px;
        box-shadow: 0 8px 25px var(--color-shadow);
        border: 1px solid rgba(139, 115, 85, 0.2);
        position: relative;
        overflow: hidden;
    }

    .page-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--color-earth), var(--color-foliage), var(--color-earth));
    }

    .page-header h2 {
        color: var(--color-soil);
        font-weight: 700;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 15px;
        font-size: 2em;
    }

    .page-header h2 i {
        color: var(--color-earth);
        font-size: 1.2em;
    }

    .page-subtitle {
        color: var(--color-soil);
        opacity: 0.8;
        font-size: 1.1em;
        margin: 0;
    }

    /* Action Bar */
    .action-bar {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        padding: 20px 25px;
        background: var(--color-white);
        border-radius: 12px;
        box-shadow: 0 4px 15px var(--color-shadow);
        border: 1px solid var(--color-wheat);
    }

    .stats-container {
        display: flex;
        gap: 20px;
    }

    .stat-item {
        text-align: center;
        padding: 10px 15px;
        background: var(--color-light-earth);
        border-radius: 8px;
        border: 1px solid var(--color-wheat);
    }

    .stat-number {
        display: block;
        font-size: 1.5em;
        font-weight: 700;
        color: var(--color-earth);
    }

    .stat-label {
        font-size: 0.8em;
        color: var(--color-soil);
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    /* Buttons */
    .btn {
        border-radius: 8px;
        padding: 12px 20px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        border: none;
        font-size: 0.95rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2);
        text-decoration: none;
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--color-earth), var(--color-soil));
        color: var(--color-white);
    }

    .btn-primary:hover {
        background: linear-gradient(135deg, var(--color-soil), #4a3018);
        color: var(--color-white);
    }

    .btn-sm {
        padding: 8px 12px;
        font-size: 0.85rem;
    }

    .btn-info {
        background: linear-gradient(135deg, var(--color-info), #138496);
        color: var(--color-white);
    }

    .btn-info:hover {
        background: linear-gradient(135deg, #117a8b, var(--color-info));
        color: var(--color-white);
    }

    .btn-success {
        background: linear-gradient(135deg, var(--color-foliage), #66bb6a);
        color: var(--color-white);
    }

    .btn-success:hover {
        background: linear-gradient(135deg, #388e3c, var(--color-foliage));
        color: var(--color-white);
    }

    /* Table Container */
    .table-container {
        background: var(--color-white);
        border-radius: 15px;
        box-shadow: 0 8px 25px var(--color-shadow);
        border: 1px solid var(--color-wheat);
        overflow: hidden;
        position: relative;
    }

    .table-container::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 4px;
        background: linear-gradient(90deg, var(--color-earth), var(--color-foliage), var(--color-earth));
    }

    /* Table Styling */
    .table {
        margin-bottom: 0;
        width: 100%;
        background: transparent;
    }

    .table thead {
        background: linear-gradient(135deg, var(--color-light-earth), rgba(245, 222, 179, 0.3));
        border-bottom: 2px solid var(--color-wheat);
    }

    .table thead th {
        border: none;
        padding: 20px 15px;
        font-weight: 700;
        color: var(--color-soil);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        font-size: 0.9em;
        position: relative;
    }

    .table thead th::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 15px;
        right: 15px;
        height: 2px;
        background: linear-gradient(90deg, transparent, var(--color-earth), transparent);
    }

    .table tbody tr {
        transition: all 0.3s ease;
        border-bottom: 1px solid rgba(245, 222, 179, 0.3);
    }

    .table tbody tr:hover {
        background: linear-gradient(135deg, rgba(245, 222, 179, 0.1), rgba(245, 222, 179, 0.05));
        transform: translateY(-2px);
        box-shadow: 0 4px 15px rgba(139, 115, 85, 0.15);
    }

    .table tbody tr:last-child {
        border-bottom: none;
    }

    .table tbody td {
        border: none;
        padding: 18px 15px;
        vertical-align: middle;
        color: var(--color-soil);
        font-weight: 500;
    }

    /* Status Badges */
    .status-badge {
        display: inline-flex;
        align-items: center;
        gap: 6px;
        padding: 6px 12px;
        border-radius: 15px;
        font-weight: 600;
        font-size: 0.8em;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .status-pending {
        background: linear-gradient(135deg, var(--color-warning), #ffca28);
        color: var(--color-soil);
        animation: pulse 2s infinite;
    }

    .status-completed {
        background: linear-gradient(135deg, var(--color-foliage), #66bb6a);
        color: var(--color-white);
    }

    .status-failed {
        background: linear-gradient(135deg, var(--color-danger), #ef5350);
        color: var(--color-white);
    }

    /* Action Buttons in Table */
    .action-buttons {
        display: flex;
        gap: 8px;
        flex-wrap: wrap;
    }

    /* Item Name Styling */
    .item-name {
        font-weight: 600;
        color: var(--color-earth);
        font-size: 1.05em;
    }

    .item-category {
        font-size: 0.85em;
        color: var(--color-soil);
        opacity: 0.7;
        font-style: italic;
    }

    /* Quantity Display */
    .quantity-display {
        font-weight: 600;
        color: var(--color-earth);
        font-size: 1.1em;
    }

    .quantity-unit {
        font-size: 0.8em;
        color: var(--color-soil);
        opacity: 0.7;
    }

    /* Date Display */
    .date-display {
        color: var(--color-soil);
        font-weight: 500;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 60px 30px;
        color: var(--color-soil);
    }

    .empty-state i {
        font-size: 4em;
        color: var(--color-wheat);
        margin-bottom: 20px;
    }

    .empty-state h3 {
        color: var(--color-earth);
        margin-bottom: 15px;
    }

    .empty-state p {
        opacity: 0.8;
        margin-bottom: 25px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .page-container {
            padding: 15px;
        }

        .action-bar {
            flex-direction: column;
            gap: 15px;
            text-align: center;
        }

        .stats-container {
            justify-content: center;
        }

        .table-container {
            overflow-x: auto;
        }

        .table {
            min-width: 700px;
        }

        .action-buttons {
            flex-direction: column;
        }

        .page-header {
            padding: 20px;
        }

        .page-header h2 {
            font-size: 1.5em;
        }
    }

    /* Animations */
    @@keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes slideInDown {
        from {
            opacity: 0;
            transform: translateY(-20px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes pulse {
        0%, 100% {
            transform: scale(1);
        }
        50% {
            transform: scale(1.05);
        }
    }

    .page-header {
        animation: fadeInUp 0.6s ease-out;
    }

    .action-bar {
        animation: fadeInUp 0.7s ease-out;
    }

    .table-container {
        animation: fadeInUp 0.8s ease-out;
    }

    .table tbody tr {
        animation: fadeInUp 0.4s ease-out;
        animation-fill-mode: both;
    }

    .table tbody tr:nth-child(1) { animation-delay: 0.1s; }
    .table tbody tr:nth-child(2) { animation-delay: 0.2s; }
    .table tbody tr:nth-child(3) { animation-delay: 0.3s; }
    .table tbody tr:nth-child(4) { animation-delay: 0.4s; }
    .table tbody tr:nth-child(5) { animation-delay: 0.5s; }
</style>

<div class="page-container">
    @if (TempData["Message"] != null)
    {
        <div class="alert alert-info">
            @TempData["Message"]
        </div>
    }

    <!-- Page Header -->
    <div class="page-header">
        <h2>
            <i class="fas fa-boxes"></i>
            Inventory Restocks
        </h2>
        <p class="page-subtitle">Manage and track all inventory restock requests</p>
    </div>

    <!-- Action Bar -->
    <div class="action-bar">
        <div class="stats-container">
            @{
                var totalRestocks = Model?.Count() ?? 0;
                var pendingRestocks = Model?.Count(r => !r.IsCompleted && !r.Failed) ?? 0;
                var completedRestocks = Model?.Count(r => r.IsCompleted) ?? 0;
                var failedRestocks = Model?.Count(r => r.Failed) ?? 0;
            }
            <div class="stat-item">
                <span class="stat-number">@totalRestocks</span>
                <span class="stat-label">Total</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">@pendingRestocks</span>
                <span class="stat-label">Pending</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">@completedRestocks</span>
                <span class="stat-label">Completed</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">@failedRestocks</span>
                <span class="stat-label">Failed</span>
            </div>
        </div>
        <div>
            @Html.ActionLink("Create New Restock", "RestockCreate", null, new { @class = "btn btn-primary" })
        </div>
    </div>

    <!-- Table Container -->
    <div class="table-container">
        @if (Model != null && Model.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th><i class="fas fa-box"></i> Item</th>
                        <th><i class="fas fa-hashtag"></i> Quantity</th>
                        <th><i class="fas fa-calendar-alt"></i> Requested On</th>
                        <th><i class="fas fa-info-circle"></i> Status</th>
                        <th><i class="fas fa-tools"></i> Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var restock in Model)
                    {
                        <tr>
                            <td>
                                <div class="item-name">@restock.Inventory.ItemName</div>
                                @if (!string.IsNullOrEmpty(restock.Inventory.Category))
                                {
                                    <div class="item-category">@restock.Inventory.Category</div>
                                }
                            </td>
                            <td>
                                <span class="quantity-display">@restock.Quantity</span>
                                <span class="quantity-unit">units</span>
                            </td>
                            <td>
                                <span class="date-display">@restock.RequestedOn.ToShortDateString()</span>
                            </td>
                            <td>
                                @{
                                    var statusClass = restock.IsCompleted ? "status-completed" :
                                                     restock.Failed ? "status-failed" : "status-pending";
                                    var statusIcon = restock.IsCompleted ? "fas fa-check-circle" :
                                                    restock.Failed ? "fas fa-times-circle" : "fas fa-clock";
                                    var statusText = restock.IsCompleted ? "Completed" :
                                                    restock.Failed ? "Failed" : "Pending";
                                }
                                <span class="status-badge @statusClass">
                                    <i class="@statusIcon"></i>
                                    @statusText
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    @Html.ActionLink("Details", "RestockDetails", new { id = restock.InventoryRestockId }, new { @class = "btn btn-info btn-sm" })
                                    @Html.ActionLink("New Restock", "RestockCreate", new { id = restock.InventoryId }, new { @class = "btn btn-success btn-sm" })
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-inbox"></i>
                <h3>No Restock Requests Found</h3>
                <p>There are currently no inventory restock requests in the system.</p>
                @Html.ActionLink("Create Your First Restock", "RestockCreate", null, new { @class = "btn btn-primary" })
            </div>
        }
    </div>
</div>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">