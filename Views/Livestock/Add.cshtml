@model FarmTrack.Models.HealthRecord
@{
    ViewBag.Title = "Add Health Record";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-bib: #b17474; /* Neutral */
    }

    /* Page Header */
    .page-header {
        background-color: var(--color-wheat);
        padding: 15px 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
            margin: 0;
        }

        .page-header p {
            color: var(--color-soil);
            margin-top: 5px;
            margin-bottom: 0;
        }

    /* Form Container */
    .form-container {
        background-color: var(--color-white);
        border: 1px solid var(--color-wheat);
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    /* Form Group */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            color: var(--color-soil);
            font-weight: 600;
            margin-bottom: 8px;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid var(--color-wheat);
        border-radius: 4px;
        color: var(--color-soil);
        font-size: 16px;
        transition: border-color 0.2s ease;
    }

        .form-control:focus {
            outline: none;
            border-color: var(--color-earth);
            box-shadow: 0 0 0 2px rgba(139, 115, 85, 0.2);
        }

        .form-control[type="date"] {
            padding: 8px 10px;
        }

    select.form-control {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%23654321' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpolyline points='6 9 12 15 18 9'%3E%3C/polyline%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: right 10px center;
        background-size: 16px;
        padding-right: 30px;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
    }

    textarea.form-control {
        min-height: 100px;
        resize: vertical;
    }

    /* Buttons */
    .btn {
        padding: 10px 16px;
        border-radius: 4px;
        font-weight: 500;
        transition: all 0.2s ease;
        cursor: pointer;
        font-size: 16px;
        border: 1px solid transparent;
        display: inline-block;
        text-decoration: none;
    }

    .btn-primary {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
        color: var(--color-white);
    }

        .btn-primary:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    .btn-secondary {
        background-color: var(--color-wheat);
        border-color: var(--color-wheat);
        color: var(--color-soil);
    }

        .btn-secondary:hover {
            background-color: #e8d1a6;
            border-color: #e8d1a6;
        }

    .btn + .btn {
        margin-left: 10px;
    }

    /* Bottom Actions */
    .form-actions {
        margin-top: 30px;
        display: flex;
        gap: 10px;
    }

    /* Instructions panel */
    .instructions-panel {
        background-color: rgba(245, 222, 179, 0.2);
        border: 1px solid var(--color-wheat);
        border-radius: 8px;
        padding: 15px;
        margin-top: 20px;
    }

        .instructions-panel h4 {
            color: var(--color-soil);
            margin-top: 0;
            margin-bottom: 10px;
            font-size: 18px;
        }

        .instructions-panel p {
            color: var(--color-soil);
            margin-bottom: 8px;
        }

    /* Validation */
    .field-validation-error {
        color: var(--color-danger);
        font-size: 14px;
        display: block;
        margin-top: 5px;
    }

    .input-validation-error {
        border-color: var(--color-danger);
    }

        .input-validation-error:focus {
            box-shadow: 0 0 0 2px rgba(255, 107, 107, 0.2);
        }

    /* Required fields */
    .required-field::after {
        content: "*";
        color: var(--color-danger);
        margin-left: 3px;
    }
</style>

<!-- Page Header -->
<div class="page-header">
    <h2>Health Records</h2>
    <p>Record health events and treatments for your livestock</p>
</div>

<div class="form-container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.LivestockId)

        <div class="form-group">
            <label for="EventType" class="required-field">Event Type</label>
            @Html.DropDownListFor(m => m.EventType, new SelectList(ViewBag.EventTypes as List<string>), "Select event type", new { @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.EventType, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            <label for="Date" class="required-field">Date</label>
            @Html.TextBoxFor(m => m.Date, "{0:yyyy-MM-dd}", new { type = "date", @class = "form-control", required = "required" })
            @Html.ValidationMessageFor(m => m.Date, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            <label for="Notes">Notes</label>
            @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", rows = "4", placeholder = "Enter any additional details, treatments, medications, or observations..." })
            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(model => model.Weight, new { @class = "form-control", type = "number", step = "0.1" })
            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
        </div>
  


        <div id="healthDetails">
            <div class="form-group">
                <label for="Diagnosis">Diagnosis</label>
                @Html.TextBoxFor(m => m.Diagnosis, new { @class = "form-control", rows = "1", placeholder = "Diagnosis" })
            </div>
            <div class="form-group">
                <label for="Treatment">Treatment</label>
                @Html.TextBoxFor(m => m.Treatment, new { @class = "form-control", rows = "1", placeholder = "Treatment" })
            </div>
        </div>

        <div class="form-actions">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Save Record
            </button>
            <a href="@Url.Action("Timeline", "Livestock", new { livestockId = ViewBag.LivestockId })" class="btn btn-secondary">
                <i class="fas fa-times"></i> Cancel
            </a>
        </div>
    }
</div>

<!-- Instructions panel -->
<div class="instructions-panel">
    <h4><i class="fas fa-info-circle"></i> Health Record Guidelines</h4>
    <p>Record important health events such as vaccinations, treatments, injuries, or general checkups.</p>
    <p>Be sure to include specific details in your notes such as medication dosages, veterinarian information, or follow-up requirements.</p>
    <p>All health records become part of the livestock's permanent medical history and can be viewed on their timeline.</p>
</div>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        // Show or hide health details based on event type
        function toggleHealthFields() {
            const type = document.getElementById("eventTypeSelect").value;
            const show = ["Illness", "Injury", "Checkup"].includes(type);
            document.getElementById("healthDetails").style.display = show ? "block" : "none";
        }
        document.getElementById("eventTypeSelect").addEventListener("change", toggleHealthFields);
        window.onload = toggleHealthFields;

        // Set the default date to today if the field is empty
        $(document).ready(function() {
            // Set today as the default date if it's a new record
            if (!$("#Date").val()) {
                $("#Date").val(new Date().toISOString().substr(0, 10));
            }

            // Add visual indication for required fields
            $("input[required], select[required], textarea[required]").each(function() {
                var label = $("label[for='" + $(this).attr("id") + "']");
                if (!label.hasClass("required-field")) {
                    label.addClass("required-field");
                }
            });
        });
    </script>
}