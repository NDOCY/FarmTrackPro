@model FarmTrack.Models.Livestock

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-earth: #d9c8b4; /* Light version of primary */
        --color-female: #FF82AB; /* Pink for female */
        --color-male: #4169E1; /* Blue for male */
        --color-success: #28a745;
        --color-info: #17a2b8;
        --color-secondary: #6c757d;
    }

    /* Page Header */
    .livestock-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 25px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .livestock-header h2 {
        color: var(--color-soil);
        font-weight: 700;
        margin-bottom: 0;
        font-size: 24px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .livestock-header:after {
        content: '';
        position: absolute;
        bottom: 0;
        right: 0;
        width: 100px;
        height: 100px;
        background: radial-gradient(circle, var(--color-light-earth) 0%, transparent 70%);
        opacity: 0.6;
        z-index: 0;
    }

    /* Main Form Container */
    .livestock-form-container {
        background-color: var(--color-white);
        border: 1px solid var(--color-wheat);
        border-radius: 12px;
        padding: 30px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 25px;
        position: relative;
    }

    /* Form Grid Layout */
    .form-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 20px;
        margin-bottom: 25px;
    }

    @@media (min-width: 768px) {
        .form-grid {
            grid-template-columns: 1fr 1fr;
        }
    }

    /* Form Groups */
    .form-group {
        margin-bottom: 20px;
        transition: all 0.3s ease;
    }

    .form-group.full-width {
        grid-column: 1 / -1;
    }

    .form-group label {
        color: var(--color-soil);
        font-weight: 600;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 0.95rem;
    }

    /* Form Controls */
    .form-control {
        border: 2px solid var(--color-wheat);
        border-radius: 8px;
        padding: 12px 15px;
        font-size: 1rem;
        transition: all 0.3s ease;
        background-color: var(--color-white);
        width: 100%;
        box-sizing: border-box;
    }

    .form-control:focus {
        border-color: var(--color-earth);
        box-shadow: 0 0 0 3px rgba(139, 115, 85, 0.1);
        outline: none;
    }

    .form-control[readonly] {
        background-color: rgba(245, 222, 179, 0.1);
        color: var(--color-soil);
        border-color: var(--color-light-earth);
    }

    /* Editable Field Styling */
    .form-group.editable {
        background-color: rgba(76, 175, 80, 0.05);
        padding: 15px;
        border-radius: 10px;
        border-left: 4px solid var(--color-foliage);
        position: relative;
    }

    .form-group.editable:before {
        content: 'EDITABLE';
        position: absolute;
        top: -8px;
        right: 10px;
        background-color: var(--color-foliage);
        color: white;
        padding: 2px 8px;
        border-radius: 10px;
        font-size: 0.7rem;
        font-weight: 600;
    }

    /* Checkbox Styling */
    .form-check {
        background-color: rgba(245, 222, 179, 0.1);
        padding: 15px;
        border-radius: 10px;
        border-left: 4px solid var(--color-wheat);
        margin-bottom: 20px;
    }

    .form-check-input {
        width: 18px;
        height: 18px;
        margin-right: 10px;
        accent-color: var(--color-earth);
    }

    .form-check-label {
        color: var(--color-soil);
        font-weight: 600;
        cursor: pointer;
    }

    /* Alert Styling */
    .alert {
        padding: 15px 20px;
        border-radius: 10px;
        margin: 15px 0;
        border: none;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .alert-info {
        background-color: rgba(23, 162, 184, 0.1);
        color: var(--color-info);
        border-left: 4px solid var(--color-info);
    }

    /* Image Container */
    .image-container {
        text-align: center;
        padding: 20px;
        background-color: rgba(245, 222, 179, 0.05);
        border-radius: 10px;
        border: 1px dashed var(--color-wheat);
        margin-top: 10px;
    }

    .image-container img {
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        max-width: 100%;
        height: auto;
    }

    /* Button Styling */
    .button-group {
        display: flex;
        gap: 15px;
        justify-content: flex-start;
        align-items: center;
        margin-top: 30px;
        padding-top: 20px;
        border-top: 2px dashed var(--color-light-earth);
    }

    .btn {
        padding: 12px 25px;
        border-radius: 8px;
        font-weight: 600;
        text-decoration: none;
        border: none;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        font-size: 1rem;
    }

    .btn-success {
        background-color: var(--color-foliage);
        color: white;
    }

    .btn-success:hover {
        background-color: #45a049;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
    }

    .btn-secondary {
        background-color: var(--color-secondary);
        color: white;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(108, 117, 125, 0.3);
    }

    /* Validation Styling */
    .text-danger {
        color: var(--color-danger);
        font-size: 0.85rem;
        margin-top: 5px;
        display: flex;
        align-items: center;
        gap: 5px;
    }

    .text-danger:before {
        content: '⚠';
        font-size: 0.9rem;
    }

    /* Field Categories */
    .field-category {
        background-color: rgba(245, 222, 179, 0.08);
        padding: 20px;
        border-radius: 10px;
        margin-bottom: 25px;
        border-left: 4px solid var(--color-earth);
    }

    .field-category h4 {
        color: var(--color-soil);
        font-weight: 600;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
        font-size: 1.1rem;
    }

    /* Sex-based styling */
    .form-group.female-animal {
        border-left-color: var(--color-female);
        background-color: rgba(255, 130, 171, 0.05);
    }

    .form-group.male-animal {
        border-left-color: var(--color-male);
        background-color: rgba(65, 105, 225, 0.05);
    }
</style>

<div class="livestock-header">
    <h2><i class="fas fa-edit"></i> Edit Livestock Details</h2>
</div>

@using (Html.BeginForm("Edit", "Livestock", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.LivestockId)
    @Html.HiddenFor(model => model.Type)
    @Html.HiddenFor(model => model.Breed)
    @Html.HiddenFor(model => model.TagNumber)
    @Html.HiddenFor(model => model.Sex)
    @Html.HiddenFor(model => model.DateOfBirth)
    @Html.HiddenFor(model => model.InitialWeight)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.DateRegistered)
    @Html.HiddenFor(model => model.Notes)
    @Html.HiddenFor(model => model.ImagePath)
    @Html.HiddenFor(model => model.QrCodePath)
    @Html.HiddenFor(model => model.UserId)
    @Html.HiddenFor(model => model.ParentId)
    @Html.HiddenFor(model => model.ReproductionRecordId)

    <div class="livestock-form-container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="field-category">
            <h4><i class="fas fa-info-circle"></i> Basic Information</h4>
            <div class="form-grid">
                <div class="form-group">
                    <label><i class="fas fa-tag"></i> Tag Number</label>
                    <input class="form-control" value="@Model.TagNumber" readonly />
                </div>

                <div class="form-group">
                    <label><i class="fas fa-paw"></i> Type</label>
                    <input class="form-control" value="@Model.Type" readonly />
                </div>

                <div class="form-group">
                    <label><i class="fas fa-dna"></i> Breed</label>
                    <input class="form-control" value="@Model.Breed" readonly />
                </div>

                <div class="form-group @(Model.Sex?.ToLower() == "female" ? "female-animal" : Model.Sex?.ToLower() == "male" ? "male-animal" : "")">
                    <label><i class="fas fa-venus-mars"></i> Sex</label>
                    <input class="form-control" value="@Model.Sex" readonly />
                </div>

                <div class="form-group">
                    <label><i class="fas fa-birthday-cake"></i> Date of Birth</label>
                    <input class="form-control" value="@(Model.DateOfBirth?.ToString("yyyy-MM-dd") ?? "Not set")" readonly />
                </div>

                <div class="form-group">
                    <label><i class="fas fa-clock"></i> Age (in months)</label>
                    <input class="form-control" value="@Model.AgeInMonths" readonly />
                </div>
            </div>
        </div>

        <div class="field-category">
            <h4><i class="fas fa-weight"></i> Weight Information</h4>
            <div class="form-grid">
                <div class="form-group editable">
                    <label><i class="fas fa-balance-scale"></i> Current Weight (kg)</label>
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label><i class="fas fa-weight-hanging"></i> Initial Weight (kg)</label>
                    <input class="form-control" value="@(Model.InitialWeight?.ToString() ?? "Not set")" readonly />
                </div>
            </div>
        </div>

        <div class="field-category">
            <h4><i class="fas fa-clipboard-list"></i> Status & Registration</h4>
            <div class="form-grid">
                <div class="form-group">
                    <label><i class="fas fa-heartbeat"></i> Status</label>
                    <input class="form-control" value="@Model.Status" readonly />
                </div>

                <div class="form-group">
                    <label><i class="fas fa-calendar-plus"></i> Date Registered</label>
                    <input class="form-control" value="@Model.DateRegistered.ToString("yyyy-MM-dd")" readonly />
                </div>
            </div>

            <div class="form-check">
                @Html.CheckBoxFor(model => model.IsBreedingStock, new { @class = "form-check-input" })
                @Html.LabelFor(model => model.IsBreedingStock, new { @class = "form-check-label" })
                <i class="fas fa-heart" style="margin-left: 5px; color: var(--color-female);"></i>
                @Html.ValidationMessageFor(model => model.IsBreedingStock, "", new { @class = "text-danger" })
            </div>

            @if (Model.IsBreedingStock)
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    @Model.GetBreedingEligibilityMessage()
                </div>
            }
        </div>

        @if (!string.IsNullOrEmpty(Model.Notes))
        {
            <div class="field-category">
                <h4><i class="fas fa-sticky-note"></i> Notes</h4>
                <div class="form-group full-width">
                    <label><i class="fas fa-comment"></i> Additional Notes</label>
                    <textarea class="form-control" readonly rows="4">@Model.Notes</textarea>
                </div>
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.ImagePath) || !string.IsNullOrEmpty(Model.QrCodePath))
        {
            <div class="field-category">
                <h4><i class="fas fa-images"></i> Media & Identification</h4>
                <div class="form-grid">
                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <div class="form-group">
                            <label><i class="fas fa-camera"></i> Livestock Image</label>
                            <div class="image-container">
                                <img src="@Url.Content(Model.ImagePath)" alt="Livestock Image" style="max-height:200px;" />
                            </div>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(Model.QrCodePath))
                    {
                        <div class="form-group">
                            <label><i class="fas fa-qrcode"></i> QR Code</label>
                            <div class="image-container">
                                <img src="@Url.Content(Model.QrCodePath)" alt="QR Code" style="max-height:150px;" />
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <div class="button-group">
            <button type="submit" class="btn btn-success">
                <i class="fas fa-save"></i> Save Changes
            </button>
            <a href="@Url.Action("Index")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>
}

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">