@model FarmTrack.Models.Equipment
@{
    ViewBag.Title = "Add Equipment";
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
    }

    /* Page Header */
    .page-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
            margin-bottom: 0;
        }

    /* Form Container */
    .form-container {
        background-color: var(--color-white);
        border: 1px solid var(--color-wheat);
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        max-width: 700px;
        margin: auto;
    }

    /* Form Styling */
    .form-group {
        margin-bottom: 15px;
    }

        .form-group label {
            color: var(--color-soil);
            font-weight: 500;
            display: block;
            margin-bottom: 5px;
        }

    .form-control {
        border: 1px solid var(--color-wheat);
        border-radius: 4px;
        padding: 8px;
        width: 100%;
    }

        .form-control:focus {
            border-color: var(--color-earth);
            box-shadow: 0 0 5px rgba(139, 115, 85, 0.5);
            outline: none;
        }

    textarea.form-control {
        resize: vertical;
        min-height: 100px;
    }

    /* Input Group Styling */
    .input-group {
        position: relative;
        display: flex;
        flex-wrap: wrap;
        align-items: stretch;
        width: 100%;
    }

    .input-group-prepend {
        display: flex;
        margin-right: -1px;
    }

    .input-group-text {
        display: flex;
        align-items: center;
        padding: 0.375rem 0.75rem;
        margin-bottom: 0;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        color: var(--color-white);
        text-align: center;
        white-space: nowrap;
        background-color: var(--color-earth);
        border: 1px solid var(--color-earth);
        border-radius: 4px 0 0 4px;
    }

    /* File Upload Styling */
    .file-upload {
        position: relative;
        overflow: hidden;
        margin-top: 5px;
    }

        .file-upload .file-upload-btn {
            position: relative;
            display: inline-block;
            padding: 8px 12px;
            background-color: var(--color-earth);
            color: var(--color-white);
            border-radius: 4px;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
        }

            .file-upload .file-upload-btn:hover {
                background-color: var(--color-soil);
            }

        .file-upload .file-upload-input {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
            width: 100%;
            height: 100%;
            cursor: pointer;
        }

        .file-upload .file-name {
            margin-top: 5px;
            display: block;
            font-size: 0.9rem;
            color: var(--color-soil);
        }

    /* Button Styling */
    .btn {
        border-radius: 6px;
        padding: 10px 16px;
        font-weight: 500;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
        color: var(--color-white);
    }

        .btn-primary:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    .btn-secondary {
        background-color: var(--color-wheat);
        border-color: var(--color-wheat);
        color: var(--color-soil);
    }

        .btn-secondary:hover {
            background-color: #e5cca3;
            border-color: #e5cca3;
        }

    /* Margin Utility */
    .mt-2 {
        margin-top: 8px;
    }

    /* Action Buttons Container */
    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 20px;
    }

    /* Validation Styling */
    .field-validation-error {
        color: var(--color-danger);
        font-size: 0.875rem;
        margin-top: 5px;
        display: block;
    }

    /* Category New Input Styling */
    .category-option {
        margin-top: 8px;
        font-size: 0.9rem;
        color: var(--color-soil);
    }
</style>

<!-- Page Header -->
<div class="page-header">
    <h2><i class="fas fa-tools"></i> Add New Equipment</h2>
</div>

<div class="form-container">
    @using (Html.BeginForm("Create", "Equipment", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name)
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-cog"></i></span>
                </div>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter equipment name" })
            </div>
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description)
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-align-left"></i></span>
                </div>
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4, placeholder = "Enter equipment description" })
            </div>
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            @Html.Label("Category")
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-folder"></i></span>
                </div>
                @Html.DropDownList("SelectedCategory", (SelectList)ViewBag.CategoryList, "Select Category", new { @class = "form-control", onchange = "clearNewCategory();" })
            </div>
            <div class="category-option">Or create a new category:</div>
            <div class="input-group mt-2">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-folder-plus"></i></span>
                </div>
                <input type="text" name="NewCategory" id="NewCategory" class="form-control" placeholder="Enter new category name" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status)
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-info-circle"></i></span>
                </div>
                @Html.TextBoxFor(model => model.Status, new { @class = "form-control", placeholder = "Enter equipment status" })
            </div>
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "field-validation-error" })
        </div>

        <div class="form-group">
            <label for="ImageUpload">Upload Image</label>
            <div class="file-upload">
                <div class="input-group">
                    <div class="input-group-prepend">
                        <span class="input-group-text"><i class="fas fa-image"></i></span>
                    </div>
                    <input type="file" name="ImageUpload" id="ImageUpload" accept="image/*" class="form-control" onchange="updateFileName()" />
                </div>
                <span id="fileName" class="file-name"></span>
            </div>
        </div>

        <div class="action-buttons">
            <a href="@Url.Action("Index", "Equipment")" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Cancel
            </a>
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Save Equipment
            </button>
        </div>
    }
</div>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

@section Scripts {
    <script>
        function clearNewCategory() {
            document.getElementById('NewCategory').value = '';
        }

        function updateFileName() {
            const input = document.getElementById('ImageUpload');
            const fileNameDisplay = document.getElementById('fileName');

            if (input.files && input.files.length > 0) {
                fileNameDisplay.textContent = 'Selected file: ' + input.files[0].name;
            } else {
                fileNameDisplay.textContent = '';
            }
        }
    </script>
}