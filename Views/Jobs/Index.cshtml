@model IEnumerable<FarmTrack.Models.Job>

@{
    ViewBag.Title = "Job Listings";
    if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout - User.cshtml";
    }
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-bib: #b17474; /* Neutral */
    }

    /* Page Header */
    .page-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
        }

        .page-header p.lead {
            color: var(--color-soil);
            opacity: 0.8;
        }

    /* Filter Section */
    .card {
        border: 1px solid var(--color-wheat);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        background-color: var(--color-white);
    }

    .form-control {
        border: 1px solid var(--color-wheat);
    }

    .btn-primary {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
    }

        .btn-primary:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    /* Task Table */
    .table thead {
        background-color: var(--color-earth);
        color: var(--color-white);
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(245, 222, 179, 0.1);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(245, 222, 179, 0.2);
    }

    /* Status Badges */
    .badge-success {
        background-color: var(--color-foliage);
        color: var(--color-white);
    }

    .badge-warning {
        background-color: var(--color-wheat);
        color: var(--color-soil);
    }

    .badge-secondary {
        background-color: var(--color-soil);
        color: var(--color-white);
    }

    .badge-danger {
        background-color: var(--color-danger);
        color: var(--color-white);
    }

    /* Action Buttons */
    .btn-info {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
        color: var(--color-white);
    }

        .btn-info:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    .btn-warning {
        background-color: var(--color-wheat);
        border-color: var(--color-wheat);
        color: var(--color-soil);
    }

        .btn-warning:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
            color: var(--color-white);
        }

    .btn-danger {
        background-color: var(--color-danger);
        border-color: var(--color-danger);
    }

        .btn-danger:hover {
            background-color: var(--color-bib);
            border-color: var(--color-bib);
        }

    /* Job type badge */
    .job-type {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .job-type-fulltime {
        background-color: var(--color-foliage);
        color: var(--color-white);
    }

    .job-type-parttime {
        background-color: var(--color-wheat);
        color: var(--color-soil);
    }

    .job-type-seasonal {
        background-color: var(--color-earth);
        color: var(--color-white);
    }

    /* Description truncation */
    .description-cell {
        max-width: 300px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }
</style>

@if (TempData["JobMessage"] != null)
{
    <div class="alert alert-success">@TempData["JobMessage"]</div>
}

<!-- Page Header -->
<div class="page-header">
    <h2>Job Listings</h2>
    <p class="lead">Browse and manage employment opportunities on the farm.</p>
</div>

<!-- Search Section -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="form-inline">
            <div class="form-group mr-3">
                <label for="search" class="mr-2">Search:</label>
                <input type="text" name="search" class="form-control" placeholder="Search jobs..." value="@ViewBag.SearchQuery" />
            </div>
            <button type="submit" class="btn btn-info"><i class="fas fa-search"></i> Search</button>
        </form>
    </div>
</div>

@if (Session["Role"] != null && Session["Role"].ToString() == "Owner")
{
    <div class="mb-3">
        <a href="@Url.Action("Create")" class="btn btn-info">
            <i class="fas fa-plus"></i> Create New Job
        </a>
    </div>
}

@if (!Model.Any())
{
    <div class="alert alert-warning text-center">No jobs found matching your search.</div>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>@Html.DisplayNameFor(model => model.Title)</th>
                    <th>@Html.DisplayNameFor(model => model.Description)</th>
                    <th>@Html.DisplayNameFor(model => model.JobType)</th>
                    <th>@Html.DisplayNameFor(model => model.DatePosted)</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr class="clickable-row" data-href="@Url.Action("Details", "Jobs", new { id = item.JobId })">
                        <td>@Html.DisplayFor(modelItem => item.Title)</td>
                        <td class="description-cell">@Html.DisplayFor(modelItem => item.Description)</td>
                        <td>
                            @{
                                var jobTypeClass = item.JobType.ToLower() == "full time" ? "job-type-fulltime" :
                                                 item.JobType.ToLower() == "part time" ? "job-type-parttime" : "job-type-seasonal";
                            }
                            <span class="job-type @jobTypeClass">@Html.DisplayFor(modelItem => item.JobType)</span>
                        </td>
                        <td>@item.DatePosted.ToString("d")</td>
                        <td>
                            <a href="@Url.Action("Details", new { id = item.JobId })" class="btn btn-info btn-sm">
                                <i class="fas fa-eye"></i> Details
                            </a>
                            @if (Session["Role"] != null && Session["Role"].ToString() == "Owner")
                            {
                                <a href="@Url.Action("Edit", new { id = item.JobId })" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.JobId })" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i>
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
<script>
    document.addEventListener("DOMContentLoaded", function () {
        let rows = document.querySelectorAll(".clickable-row");
        rows.forEach(row => {
            row.addEventListener("click", function () {
                let url = this.getAttribute("data-href");
                if (url) {
                    window.location.href = url;
                }
            });
        });
    });

</script>