@model IEnumerable<FarmTrack.Models.Plot>

@{
    ViewBag.Title = "Plots Management";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-earth: #e5d9cc; /* Light version of earth */
        --color-light-foliage: #e8f5e9; /* Light version of foliage */
    }

    body {
        background-color: #f9f7f4;
    }

    /* Dashboard Header */
    .dashboard-header {
        background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 20px rgba(101, 67, 33, 0.2);
    }

        .dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 250px;
            height: 100%;
            background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23F5DEB3" opacity="0.1"><path d="M12 2L2 7L12 12L22 7L12 2ZM2 17L12 22L22 17M2 12L12 17L22 12"/></svg>');
            background-repeat: no-repeat;
            background-position: right center;
            background-size: 180px;
            opacity: 0.2;
        }

        .dashboard-header h1 {
            color: var(--color-white);
            font-weight: 700;
            margin-bottom: 10px;
            font-size: 2.2rem;
        }

        .dashboard-header p {
            color: var(--color-wheat);
            font-size: 1.2rem;
            max-width: 600px;
        }

    .dashboard-stats {
        display: flex;
        gap: 20px;
        margin-top: 20px;
    }

    .stat-card {
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 12px 20px;
        min-width: 150px;
    }

        .stat-card .stat-value {
            color: var(--color-white);
            font-size: 1.8rem;
            font-weight: 700;
        }

        .stat-card .stat-label {
            color: var(--color-wheat);
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

    /* Action Button */
    .action-button {
        background-color: var(--color-foliage);
        color: white;
        border: none;
        border-radius: 50px;
        padding: 12px 25px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
        transition: all 0.3s ease;
        text-decoration: none;
        margin-right: 10px;
    }

        .action-button:hover {
            background-color: #3d8b40;
            transform: translateY(-2px);
            box-shadow: 0 6px 15px rgba(76, 175, 80, 0.4);
            color: white;
        }

        .action-button.secondary {
            background-color: var(--color-wheat);
            color: var(--color-soil);
            box-shadow: 0 4px 12px rgba(245, 222, 179, 0.4);
        }

            .action-button.secondary:hover {
                background-color: #e6c89a;
                box-shadow: 0 6px 15px rgba(245, 222, 179, 0.5);
                color: var(--color-soil);
            }

    .filters-section {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 15px;
        margin-bottom: 25px;
        background-color: white;
        border-radius: 12px;
        padding: 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

        .filters-section label {
            font-weight: 600;
            color: var(--color-soil);
            margin-right: 8px;
        }

        .filters-section select {
            padding: 10px 15px;
            border-radius: 8px;
            border: 1px solid var(--color-wheat);
            color: var(--color-soil);
            background-color: white;
            min-width: 200px;
        }

            .filters-section select:focus {
                outline: none;
                border-color: var(--color-earth);
                box-shadow: 0 0 0 3px rgba(139, 115, 85, 0.1);
            }

    /* Modern Table Styling */
    .modern-table-container {
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 30px;
    }

    .table {
        margin-bottom: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table thead th {
            background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
            color: var(--color-white);
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.85rem;
            padding: 20px 15px;
            border: none;
            position: sticky;
            top: 0;
            z-index: 10;
        }

            .table thead th:first-child {
                border-top-left-radius: 12px;
            }

            .table thead th:last-child {
                border-top-right-radius: 12px;
            }

        .table tbody tr {
            transition: all 0.2s ease;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

            .table tbody tr:hover {
                background-color: var(--color-light-earth);
                transform: translateY(-1px);
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

            .table tbody tr:last-child {
                border-bottom: none;
            }

        .table td {
            padding: 15px;
            vertical-align: middle;
            color: var(--color-soil);
            font-weight: 500;
        }

    /* Status Badges */
    .status-badge {
        display: inline-block;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-active {
        background-color: var(--color-light-foliage);
        color: var(--color-foliage);
    }

    .status-planted {
        background-color: #fff3e0;
        color: #f57c00;
    }

    .status-harvested {
        background-color: var(--color-light-earth);
        color: var(--color-earth);
    }

    .status-inactive {
        background-color: #f5f5f5;
        color: #757575;
    }

    /* Action Buttons */
    .action-links {
        display: flex;
        gap: 8px;
        align-items: center;
    }

    .action-link {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 35px;
        height: 35px;
        border-radius: 8px;
        text-decoration: none;
        font-size: 0.85rem;
        font-weight: 600;
        transition: all 0.2s ease;
        color: white;
    }

    .action-edit {
        background-color: var(--color-wheat);
        color: var(--color-soil) !important;
    }

        .action-edit:hover {
            background-color: var(--color-earth);
            color: white !important;
            transform: translateY(-2px);
        }

    .action-details {
        background-color: var(--color-foliage);
    }

        .action-details:hover {
            background-color: #3d8b40;
            transform: translateY(-2px);
        }

    .action-delete {
        background-color: var(--color-danger);
    }

        .action-delete:hover {
            background-color: #e53e3e;
            transform: translateY(-2px);
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .dashboard-stats {
            flex-direction: column;
            gap: 10px;
        }

        .filters-section {
            flex-direction: column;
            align-items: stretch;
        }

        .modern-table-container {
            overflow-x: auto;
        }

        .action-links {
            flex-direction: column;
            gap: 4px;
        }
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 50px 20px;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }

    .empty-illustration {
        max-width: 200px;
        margin: 0 auto 20px;
        opacity: 0.7;
    }

    .empty-state h3 {
        color: var(--color-soil);
        margin-bottom: 10px;
    }

    .empty-state p {
        color: #777;
        margin-bottom: 20px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Data Cell Enhancements */
    .data-cell {
        font-weight: 500;
    }

    .data-cell-highlight {
        background-color: rgba(76, 175, 80, 0.1);
        padding: 4px 8px;
        border-radius: 4px;
        font-weight: 600;
        color: var(--color-foliage);
    }

    .crop-name {
        font-weight: 600;
        color: var(--color-foliage);
    }

    .plot-name {
        font-weight: 600;
        color: var(--color-soil);
    }
</style>

<!-- Dashboard Header -->
<div class="dashboard-header">
    <h1><i class="fas fa-seedling me-2"></i>Plots Management</h1>
    <p>Monitor and manage your agricultural plots, crops, and cultivation activities</p>

    <div class="dashboard-stats">
        <div class="stat-card">
            <div class="stat-value">@Model.Count()</div>
            <div class="stat-label">Total Plots</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(p => p.Status == "Active")</div>
            <div class="stat-label">Active Plots</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Sum(p => p.SizeInHectares)</div>
            <div class="stat-label">Total Hectares</div>
        </div>
    </div>
</div>

<!-- Actions and Filters -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        @Html.ActionLink("Create New Plot", "Create", null, new { @class = "action-button" })
        <i class="fas fa-plus-circle"></i>
        @Html.ActionLink("View All Plot Crops", "PlotCropsList", "PlotCrops", null, new { @class = "action-button secondary" })
        <i class="fas fa-list"></i>
    </div>
</div>

<!-- Filter Section -->
<div class="filters-section">
    @using (Html.BeginForm("Index", "Plots", FormMethod.Get))
    {
        <label><i class="fas fa-filter me-2"></i>Status Filter:</label>
        @Html.DropDownList("statusFilter", (SelectList)ViewBag.Statuses, "All Statuses", new
        {
            onchange = "this.form.submit()",
            @class = "form-control"
        })
    }
</div>

@if (Model.Any())
{
    <!-- Modern Table -->
    <div class="modern-table-container">
        <table class="table">
            <thead>
                <tr>
                    <th><i class="fas fa-seedling me-2"></i>@Html.DisplayNameFor(model => model.Crop.Name)</th>
                    <th><i class="fas fa-map-marker-alt me-2"></i>@Html.DisplayNameFor(model => model.Name)</th>
                    <th><i class="fas fa-mountain me-2"></i>@Html.DisplayNameFor(model => model.SoilType)</th>
                   
                    <th><i class="fas fa-expand-arrows-alt me-2"></i>@Html.DisplayNameFor(model => model.SizeInHectares)</th>
                   
                    <th><i class="fas fa-info-circle me-2"></i>@Html.DisplayNameFor(model => model.Status)</th>
                    <th><i class="fas fa-map me-2"></i>@Html.DisplayNameFor(model => model.Coordinates)</th>
                    <th><i class="fas fa-search me-2"></i>@Html.DisplayNameFor(model => model.LastInspectionDate)</th>
     
                    <th><i class="fas fa-cogs me-2"></i>Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td class="crop-name">
                            @Html.DisplayFor(modelItem => item.Crop.Name)
                        </td>
                        <td class="plot-name">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td class="data-cell">
                            @Html.DisplayFor(modelItem => item.SoilType)
                        </td>

                        <td class="data-cell-highlight">
                            @Html.DisplayFor(modelItem => item.SizeInHectares) ha
                        </td>

                        <td>
                            @{
                                var statusClass =
                                    item.Status?.ToLower() == "active" ? "status-active" :
                                    item.Status?.ToLower() == "planted" ? "status-planted" :
                                    item.Status?.ToLower() == "harvested" ? "status-harvested" :
                                    "status-inactive";
                            }
                            <span class="status-badge @statusClass">
                                @Html.DisplayFor(modelItem => item.Status)
                            </span>
                        </td>


                        <td class="data-cell" title="@item.Coordinates">
                            @(item.Coordinates != null && item.Coordinates.Length > 30
                            ? item.Coordinates.Substring(0, 30) + "..."
                            : item.Coordinates)
                        </td>


                        <td class="data-cell">
                            @Html.DisplayFor(modelItem => item.Notes)
                        </td>
                        <td>
                            <div class="action-links">
                                @Html.ActionLink(" ", "Edit", new { id = item.Id }, new
                                {
                                    @class = "action-link action-edit",
                                    title = "Edit Plot",
                                    @data_toggle = "tooltip"
                                })
                                <i class="fas fa-edit"></i>
                                @Html.ActionLink(" ", "Details", new { id = item.Id }, new
                                {
                                    @class = "action-link action-details",
                                    title = "View Details",
                                    @data_toggle = "tooltip"
                                })
                                <i class="fas fa-eye"></i>
                                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new
                                {
                                    @class = "action-link action-delete",
                                    title = "Delete Plot",
                                    @data_toggle = "tooltip"
                                })
                                <i class="fas fa-trash"></i>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <!-- Empty State -->
    <div class="empty-state">
        <div class="empty-illustration">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="#8B7355">
                <path d="M512 96c0 50.2-49.3 91.9-111.3 95.6-3.2 19.2-15.4 35.9-32.6 46.4L368 464c0 26.5-21.5 48-48 48H192c-26.5 0-48-21.5-48-48V238c-17.2-10.5-29.4-27.2-32.6-46.4C49.3 187.9 0 146.2 0 96 0 42.9 42.9 0 96 0s96 42.9 96 96c0 4.5-.3 8.9-.9 13.2C209.3 117.9 230.9 128 256 128s46.7-10.1 64.9-18.8c-.6-4.3-.9-8.7-.9-13.2 0-53.1 42.9-96 96-96s96 42.9 96 96z" />
            </svg>
        </div>
        <h3>No Plots Found</h3>
        <p>Start managing your agricultural operations by creating your first plot.</p>
        @Html.ActionLink("Create First Plot", "Create", null, new { @class = "action-button" })
        <i class="fas fa-plus-circle"></i>
    </div>
}

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>