@model List<FarmTrack.Models.ReproductionListViewModel>

@{
    ViewBag.Title = "Reproduction Records";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-earth: #e5d9cc; /* Light version of earth */
        --color-light-foliage: #e8f5e9; /* Light version of foliage */
    }

    body {
        background-color: #f9f7f4;
    }

    /* Dashboard Header */
    .dashboard-header {
        background: linear-gradient(135deg, var(--color-earth) 0%, var(--color-soil) 100%);
        border-radius: 12px;
        padding: 30px;
        margin-bottom: 30px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 10px 20px rgba(101, 67, 33, 0.2);
    }

    .dashboard-header::before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        width: 250px;
        height: 100%;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23F5DEB3" opacity="0.1"><path d="M17 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.89 21 5 21H19C20.1 21 21 20.1 21 19V7L17 3ZM12 19C9.24 19 7 16.76 7 14C7 11.24 9.24 9 12 9C14.76 9 17 11.24 17 14C17 16.76 14.76 19 12 19ZM12 17C13.66 17 15 15.66 15 14C15 12.34 13.66 11 12 11C10.34 11 9 12.34 9 14C9 15.66 10.34 17 12 17Z"/></svg>');
        background-repeat: no-repeat;
        background-position: right center;
        background-size: 180px;
        opacity: 0.2;
    }

    .dashboard-header h1 {
        color: var(--color-white);
        font-weight: 700;
        margin-bottom: 10px;
        font-size: 2.2rem;
    }

    .dashboard-header p {
        color: var(--color-wheat);
        font-size: 1.2rem;
        max-width: 600px;
    }

    .dashboard-stats {
        display: flex;
        gap: 20px;
        margin-top: 20px;
    }

    .stat-card {
        background-color: rgba(255, 255, 255, 0.15);
        border-radius: 8px;
        padding: 12px 20px;
        min-width: 150px;
    }

    .stat-card .stat-value {
        color: var(--color-white);
        font-size: 1.8rem;
        font-weight: 700;
    }

    .stat-card .stat-label {
        color: var(--color-wheat);
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    /* Action Button */
    .action-button {
        background-color: var(--color-foliage);
        color: white;
        border: none;
        border-radius: 50px;
        padding: 12px 25px;
        font-weight: 600;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 4px 12px rgba(76, 175, 80, 0.3);
        transition: all 0.3s ease;
        text-decoration: none;
    }

    .action-button:hover {
        background-color: #3d8b40;
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(76, 175, 80, 0.4);
        color: white;
    }

    .action-button.secondary {
        background-color: var(--color-wheat);
        color: var(--color-soil);
        box-shadow: 0 4px 12px rgba(245, 222, 179, 0.4);
    }

    .action-button.secondary:hover {
        background-color: #e6c89a;
        box-shadow: 0 6px 15px rgba(245, 222, 179, 0.5);
        color: var(--color-soil);
    }

    .filters-section {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 15px;
        margin-bottom: 25px;
        background-color: white;
        border-radius: 12px;
        padding: 15px 20px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .filters-section label {
        font-weight: 600;
        color: var(--color-soil);
        margin-right: 8px;
    }

    .filters-section select {
        padding: 8px 12px;
        border-radius: 8px;
        border: 1px solid #ddd;
        color: var(--color-soil);
    }

    .search-box {
        flex-grow: 1;
        position: relative;
    }

    .search-box input {
        width: 100%;
        padding: 10px 15px 10px 38px;
        border-radius: 8px;
        border: 1px solid #ddd;
        color: var(--color-soil);
    }

    .search-box i {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: #999;
    }

    /* Cards Container */
    .cards-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    /* Reproduction Card */
    .reproduction-card {
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        transition: all 0.3s ease;
        position: relative;
    }

    .reproduction-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(0, 0, 0, 0.12);
    }

    .card-header {
        padding: 20px;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-header .tag {
        display: inline-block;
        padding: 5px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .tag.complete {
        background-color: var(--color-light-foliage);
        color: var(--color-foliage);
    }

    .tag.pending {
        background-color: var(--color-light-earth);
        color: var(--color-earth);
    }

    .card-body {
        padding: 20px;
    }

    .animals-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 25px;
    }

    .animal {
        text-align: center;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .animal-icon {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 8px;
        font-size: 24px;
    }

    .female-icon {
        background-color: #ffebee;
        color: #e91e63;
    }

    .male-icon {
        background-color: #e3f2fd;
        color: #2196f3;
    }

    .animal-tag {
        color: var(--color-soil);
        font-weight: 600;
    }

    .animal-name {
        color: #777;
        font-size: 0.9rem;
    }

    .breeding-arrow {
        width: 30%;
        height: 4px;
        background: linear-gradient(90deg, #e91e63 0%, #2196f3 100%);
        position: relative;
    }

    .breeding-arrow::after {
        content: '';
        position: absolute;
        right: -10px;
        top: 50%;
        transform: translateY(-50%);
        width: 0;
        height: 0;
        border-top: 8px solid transparent;
        border-bottom: 8px solid transparent;
        border-left: 10px solid #2196f3;
    }

    .timeline {
        display: flex;
        align-items: center;
        margin-bottom: 20px;
    }

    .timeline-dot {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        background-color: var(--color-earth);
    }

    .timeline-line {
        flex-grow: 1;
        height: 3px;
        background: linear-gradient(to right, var(--color-earth), var(--color-foliage));
        margin: 0 10px;
    }

    .dates-container {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .date-box {
        text-align: center;
        width: 45%;
    }

    .date-label {
        font-size: 0.85rem;
        color: #777;
        margin-bottom: 5px;
    }

    .date-value {
        font-weight: 600;
        color: var(--color-soil);
    }

    .offspring-info {
        background-color: var(--color-light-foliage);
        border-radius: 8px;
        padding: 10px 15px;
        margin-bottom: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .offspring-icon {
        color: var(--color-foliage);
        font-size: 24px;
    }

    .offspring-text {
        color: var(--color-soil);
        font-weight: 600;
    }

    .card-actions {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .card-btn {
        flex: 1;
        padding: 10px;
        border-radius: 8px;
        border: none;
        font-weight: 600;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 5px;
        cursor: pointer;
        transition: all 0.2s ease;
        text-decoration: none;
    }

    .view-btn {
        background-color: var(--color-light-earth);
        color: var(--color-soil);
    }

    .view-btn:hover {
        background-color: var(--color-earth);
        color: white;
    }

    .birth-btn {
        background-color: var(--color-light-foliage);
        color: var(--color-foliage);
    }

    .birth-btn:hover {
        background-color: var(--color-foliage);
        color: white;
    }

    .empty-state {
        text-align: center;
        padding: 50px 20px;
        background-color: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
    }

    .empty-illustration {
        max-width: 200px;
        margin: 0 auto 20px;
        opacity: 0.7;
    }

    .empty-state h3 {
        color: var(--color-soil);
        margin-bottom: 10px;
    }

    .empty-state p {
        color: #777;
        margin-bottom: 20px;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Pagination */
    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 30px;
    }

    .pagination {
        display: flex;
        gap: 5px;
    }

    .page-item {
        list-style-type: none;
    }

    .page-link {
        display: block;
        padding: 8px 12px;
        border-radius: 8px;
        background-color: white;
        color: var(--color-soil);
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
        transition: all 0.2s ease;
        text-decoration: none;
    }

    .page-link:hover {
        background-color: var(--color-wheat);
    }

    .page-item.active .page-link {
        background-color: var(--color-earth);
        color: white;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .cards-container {
            grid-template-columns: 1fr;
        }

        .dashboard-stats {
            flex-direction: column;
            gap: 10px;
        }
    }
</style>

<!-- Dashboard Header -->
<div class="dashboard-header">
    <h1><i class="fas fa-leaf me-2"></i>Reproduction Tracker</h1>
    <p>Monitor breeding activities, track progress, and record births across your livestock</p>

    <div class="dashboard-stats">
        <div class="stat-card">
            <div class="stat-value">@Model.Count</div>
            <div class="stat-label">Total Records</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(r => r.IsBirthRecorded)</div>
            <div class="stat-label">Completed</div>
        </div>
        <div class="stat-card">
            <div class="stat-value">@Model.Count(r => !r.IsBirthRecorded)</div>
            <div class="stat-label">Pending</div>
        </div>
    </div>
</div>

<!-- Actions and Filters -->
<div class="d-flex justify-content-between align-items-center mb-4">
    <a href="@Url.Action("Create", "Reproduction")" class="action-button">
        <i class="fas fa-plus-circle"></i> New Record
    </a>

    <div class="dropdown">
        <button class="action-button secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            <i class="fas fa-filter"></i> Filter
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <li><a class="dropdown-item" href="#">All Records</a></li>
            <li><a class="dropdown-item" href="#">Pending Births</a></li>
            <li><a class="dropdown-item" href="#">Completed Records</a></li>
            <li><hr class="dropdown-divider"></li>
            <li><a class="dropdown-item" href="#">This Month</a></li>
            <li><a class="dropdown-item" href="#">Last 3 Months</a></li>
        </ul>
    </div>
</div>

<!-- Search Box -->
<div class="search-box mb-4">
    <i class="fas fa-search"></i>
    <input type="text" id="recordSearch" placeholder="Search by tag, date, or status...">
</div>

@if (Model.Any())
{
    <!-- Reproduction Cards -->
    <div class="cards-container">
        @foreach (var record in Model)
        {
            <div class="reproduction-card">
                <div class="card-header">
                    <h5 class="mb-0">Record #@record.Id</h5>
                    @if (record.IsBirthRecorded)
                    {
                        <span class="tag complete"><i class="fas fa-check-circle me-1"></i>Complete</span>
                    }
                    else
                    {
                        <span class="tag pending"><i class="fas fa-clock me-1"></i>Pending</span>
                    }
                </div>
                <div class="card-body">
                    <div class="animals-container">
                        <div class="animal">
                            <div class="animal-icon female-icon">
                                <i class="fas fa-venus"></i>
                            </div>
                            <div class="animal-tag">@record.FemaleTag</div>
                        </div>

                        <div class="breeding-arrow"></div>

                        <div class="animal">
                            <div class="animal-icon male-icon">
                                <i class="fas fa-mars"></i>
                            </div>
                            <div class="animal-tag">@(record.MaleTag ?? "Not Recorded")</div>
                        </div>
                    </div>

                    <div class="timeline">
                        <div class="timeline-dot"></div>
                        <div class="timeline-line"></div>
                        <div class="timeline-dot"></div>
                    </div>

                    <div class="dates-container">
                        <div class="date-box">
                            <div class="date-label"><i class="fas fa-calendar-check me-1"></i>Breeding Date</div>
                            <div class="date-value">@record.BreedingDate.ToShortDateString()</div>
                        </div>

                        <div class="date-box">
                            <div class="date-label"><i class="fas fa-calendar-day me-1"></i>Expected Due</div>
                            <div class="date-value">
                                @(record.ExpectedBirthDate.HasValue ? record.ExpectedBirthDate.Value.ToShortDateString() : "N/A")
                            </div>

                        </div>
                    </div>

                    @if (record.IsBirthRecorded)
                    {
                        <div class="offspring-info">
                            <div class="offspring-icon">
                                <i class="fas fa-baby"></i>
                            </div>
                            <div class="offspring-text">
                                @record.NumberOfOffspring offspring recorded
                            </div>
                        </div>
                    }

                    <div class="card-actions">
                        <a href="@Url.Action("Details", "Reproduction", new { id = record.Id })" class="card-btn view-btn">
                            <i class="fas fa-eye"></i> View Details
                        </a>

                        @if (!record.IsBirthRecorded)
                        {
                            <a href="@Url.Action("RecordBirthSimple", "Reproduction", new { id = record.Id })" class="card-btn birth-btn">
                                <i class="fas fa-baby"></i> Record Birth
                            </a>
                        }
                    </div>
                </div>
            </div>
        }
    </div>

    <!-- Pagination -->
    <nav aria-label="Page navigation">
        <ul class="pagination">
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Previous">
                    <i class="fas fa-chevron-left"></i>
                </a>
            </li>
            <li class="page-item active"><a class="page-link" href="#">1</a></li>
            <li class="page-item"><a class="page-link" href="#">2</a></li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#" aria-label="Next">
                    <i class="fas fa-chevron-right"></i>
                </a>
            </li>
        </ul>
    </nav>
}
else
{
    <!-- Empty State -->
    <div class="empty-state">
        <div class="empty-illustration">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="#8B7355">
                <path d="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z" />
            </svg>
        </div>
        <h3>No Reproduction Records Yet</h3>
        <p>Start tracking your livestock breeding by adding your first reproduction record.</p>
        <a href="@Url.Action("Create", "Reproduction")" class="action-button">
            <i class="fas fa-plus-circle"></i> Add First Record
        </a>
    </div>
}

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Search functionality
        const searchInput = document.getElementById('recordSearch');
        const cards = document.querySelectorAll('.reproduction-card');

        if (searchInput) {
            searchInput.addEventListener('input', function () {
                const searchTerm = this.value.toLowerCase();

                cards.forEach(card => {
                    const cardText = card.textContent.toLowerCase();
                    if (cardText.includes(searchTerm)) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
        }

        // Calculate remaining days for pending records
        const todayDate = new Date();
        const pendingCards = document.querySelectorAll('.tag.pending');

        pendingCards.forEach(tag => {
            const card = tag.closest('.reproduction-card');
            const dueDateElem = card.querySelector('.date-value:last-child');

            if (dueDateElem) {
                const dueDate = new Date(dueDateElem.textContent);
                const diffTime = dueDate - todayDate;
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

                if (diffDays > 0) {
                    // Create days remaining badge
                    const daysRemainingElem = document.createElement('div');
                    daysRemainingElem.classList.add('days-remaining');
                    daysRemainingElem.style.position = 'absolute';
                    daysRemainingElem.style.top = '20px';
                    daysRemainingElem.style.right = '20px';
                    daysRemainingElem.style.backgroundColor = '#fff3e0';
                    daysRemainingElem.style.color = '#ff9800';
                    daysRemainingElem.style.padding = '5px 10px';
                    daysRemainingElem.style.borderRadius = '20px';
                    daysRemainingElem.style.fontSize = '0.8rem';
                    daysRemainingElem.style.fontWeight = '600';
                    daysRemainingElem.innerHTML = <i class="fas fa-hourglass-half me-1"></i>;${ diffDays } days left;

                    card.appendChild(daysRemainingElem);
                }
            }
        });
    });
</script>