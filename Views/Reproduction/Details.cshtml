@model FarmTrack.Models.ReproductionDetailsViewModel

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-light-earth: #d9c8b4; /* Light version of primary */
        --color-female: #FF82AB; /* Pink for female */
        --color-male: #4169E1; /* Blue for male */
        --color-due: #9C27B0; /* Purple for due date */
    }

    /* Page Header */
    .breeding-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 12px;
        margin-bottom: 25px;
        position: relative;
        overflow: hidden;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    .breeding-header h3 {
        color: var(--color-soil);
        font-weight: 700;
        margin-bottom: 0;
        font-size: 24px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .breeding-header:after {
        content: '';
        position: absolute;
        bottom: 0;
        right: 0;
        width: 100px;
        height: 100px;
        background: radial-gradient(circle, var(--color-light-earth) 0%, transparent 70%);
        opacity: 0.6;
        z-index: 0;
    }

    /* Content Container */
    .breeding-container {
        background-color: var(--color-white);
        border: 1px solid var(--color-wheat);
        border-radius: 12px;
        padding: 25px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        margin-bottom: 25px;
        position: relative;
    }

    /* Breeding Details */
    .breeding-details {
        display: grid;
        grid-template-columns: 1fr;
        gap: 8px;
        margin-bottom: 25px;
    }

    @@media (min-width: 768px) {
        .breeding-details {
            grid-template-columns: 1fr 1fr;
            gap: 20px;
        }
    }

    .detail-item {
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 10px;
        position: relative;
        transition: all 0.3s ease;
    }

    .detail-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .detail-item.female {
        background-color: rgba(255, 130, 171, 0.1);
        border-left: 4px solid var(--color-female);
    }

    .detail-item.male {
        background-color: rgba(65, 105, 225, 0.1);
        border-left: 4px solid var(--color-male);
    }

    .detail-item.date {
        background-color: rgba(245, 222, 179, 0.2);
        border-left: 4px solid var(--color-wheat);
    }

    .detail-item.due {
        background-color: rgba(156, 39, 176, 0.1);
        border-left: 4px solid var(--color-due);
    }

    .detail-item.outcome {
        background-color: rgba(76, 175, 80, 0.1);
        border-left: 4px solid var(--color-foliage);
    }

    .detail-item strong {
        color: var(--color-soil);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 1rem;
        margin-bottom: 3px;
    }

    .detail-item .value {
        color: #333;
        font-size: 1.1rem;
        font-weight: 500;
        margin-top: 5px;
    }

    /* Offspring Section */
    .offspring-section {
        margin-top: 30px;
        border-top: 2px dashed var(--color-light-earth);
        padding-top: 20px;
    }

    .offspring-section h4 {
        color: var(--color-soil);
        font-weight: 600;
        margin-bottom: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    /* Offspring Table */
    .offspring-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
        background-color: var(--color-white);
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    }

    .offspring-table thead {
        background-color: var(--color-wheat);
    }

    .offspring-table th {
        padding: 15px 12px;
        text-align: left;
        font-weight: 600;
        color: var(--color-soil);
        border-bottom: 2px solid var(--color-light-earth);
    }

    .offspring-table td {
        padding: 12px;
        border-bottom: 1px solid rgba(245, 222, 179, 0.3);
        color: #333;
        transition: background-color 0.2s ease;
    }

    .offspring-table tbody tr:hover {
        background-color: rgba(245, 222, 179, 0.1);
    }

    .offspring-table tbody tr:last-child td {
        border-bottom: none;
    }

    /* Gender badges */
    .gender-badge {
        display: inline-flex;
        align-items: center;
        padding: 4px 10px;
        border-radius: 15px;
        font-weight: 500;
        font-size: 0.85rem;
        gap: 5px;
    }

    .gender-female {
        background-color: rgba(255, 130, 171, 0.15);
        color: #c2185b;
    }

    .gender-male {
        background-color: rgba(65, 105, 225, 0.15);
        color: #1976d2;
    }

    .gender-unknown {
        background-color: rgba(158, 158, 158, 0.15);
        color: #616161;
    }

    /* No Offspring Message */
    .no-offspring {
        padding: 20px;
        border: 1px dashed var(--color-wheat);
        border-radius: 8px;
        color: #6c757d;
        text-align: center;
        background-color: rgba(245, 222, 179, 0.05);
        margin-top: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

    .no-offspring i {
        color: #d9c8b4;
        font-size: 1.3rem;
    }

    /* Status badges for birth outcome */
    .outcome-badge {
        display: inline-flex;
        align-items: center;
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.95rem;
        gap: 6px;
    }

    .outcome-success {
        background-color: rgba(76, 175, 80, 0.15);
        color: #2e7d32;
    }

    .outcome-pending {
        background-color: rgba(255, 193, 7, 0.15);
        color: #ff8f00;
    }

    .outcome-issue {
        background-color: rgba(244, 67, 54, 0.15);
        color: #d32f2f;
    }
</style>

<div class="breeding-header">
    <h3><i class="fas fa-baby"></i> Reproduction Record Details</h3>
</div>

<div class="breeding-container">
    <div class="breeding-details">
        <div class="detail-item female">
            <strong><i class="fas fa-venus"></i> Female</strong>
            <div class="value">@Model.FemaleTag</div>
        </div>

        <div class="detail-item male">
            <strong><i class="fas fa-mars"></i> Male</strong>
            <div class="value">@Model.MaleTag</div>
        </div>

        <div class="detail-item date">
            <strong><i class="fas fa-calendar-check"></i> Breeding Date</strong>
            <div class="value">@Model.BreedingDate.ToShortDateString()</div>
        </div>

        <div class="detail-item due">
            <strong><i class="fas fa-calendar-plus"></i> Expected Due Date</strong>
            <div class="value">@(Model.ExpectedBirthDate?.ToShortDateString() ?? "Not Available")</div>
        </div>

        <div class="detail-item outcome" style="grid-column: 1 / -1;">
            <strong><i class="fas fa-heartbeat"></i> Birth Outcome</strong>
            <div class="value">
                @{
                    var outcomeClass = "outcome-pending";
                    var outcomeIcon = "hourglass-half";

                    if (!string.IsNullOrEmpty(Model.BirthOutcome))
                    {
                        if (Model.BirthOutcome.ToLower().Contains("success") ||
                            Model.BirthOutcome.ToLower().Contains("healthy") ||
                            Model.BirthOutcome.ToLower().Contains("normal"))
                        {
                            outcomeClass = "outcome-success";
                            outcomeIcon = "check-circle";
                        }
                        else if (Model.BirthOutcome.ToLower().Contains("complication") ||
                                Model.BirthOutcome.ToLower().Contains("issue") ||
                                Model.BirthOutcome.ToLower().Contains("problem") ||
                                Model.BirthOutcome.ToLower().Contains("death"))
                        {
                            outcomeClass = "outcome-issue";
                            outcomeIcon = "exclamation-circle";
                        }
                    }
                }

                <span class="outcome-badge @outcomeClass">
                    <i class="fas fa-@outcomeIcon"></i>
                    @(string.IsNullOrEmpty(Model.BirthOutcome) ? "Not Recorded" : Model.BirthOutcome)
                </span>
            </div>
        </div>
    </div>

    <div class="offspring-section">
        <h4><i class="fas fa-baby-carriage"></i> Offspring</h4>

        @if (Model.Offspring.Any())
        {
            <table class="offspring-table">
                <thead>
                    <tr>
                        <th><i class="fas fa-tag"></i> Tag</th>
                        <th><i class="fas fa-venus-mars"></i> Gender</th>
                        <th><i class="fas fa-birthday-cake"></i> Birth Date</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var offspring in Model.Offspring)
                    {
                        <tr>
                            <td><strong>@offspring.Tag</strong></td>
                            <td>
                                @{
                                    var genderClass = "gender-unknown";
                                    var genderIcon = "question";
                                    var genderText = offspring.Gender ?? "Unknown";

                                    if (!string.IsNullOrEmpty(offspring.Gender))
                                    {
                                        if (offspring.Gender.ToLower().Contains("female") || offspring.Gender.ToLower().Contains("f"))
                                        {
                                            genderClass = "gender-female";
                                            genderIcon = "venus";
                                        }
                                        else if (offspring.Gender.ToLower().Contains("male") || offspring.Gender.ToLower().Contains("m"))
                                        {
                                            genderClass = "gender-male";
                                            genderIcon = "mars";
                                        }
                                    }
                                }
                                <span class="gender-badge @genderClass">
                                    <i class="fas fa-@genderIcon"></i>
                                    @genderText
                                </span>
                            </td>
                            <td>@(offspring.BirthDate?.ToShortDateString() ?? "N/A")</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="no-offspring">
                <i class="fas fa-info-circle"></i>
                No offspring recorded.
            </div>
        }
    </div>
</div>

<!-- Font Awesome for Icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">