@model FarmTrack.Models.Message
@{
    ViewBag.Title = "Compose Message";
    var isAdminOrOwner = (bool)ViewBag.IsAdminOrOwner;
    if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout - User.cshtml";
    }
}

<div class="page-header">
    <h2>Compose Message</h2>
    <p class="lead">Create a new message to communicate with other users</p>
</div>

<div class="card">
    <div class="card-body">
        @using (Html.BeginForm("Send", "Message", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-group">
                @Html.LabelFor(m => m.Subject)
                @Html.TextBoxFor(m => m.Subject, new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Body)
                @Html.TextAreaFor(m => m.Body, new { @class = "form-control", rows = 6 })
            </div>

            if (isAdminOrOwner)
            {
                <div class="form-group recipient-section">
                    <label>Send To:</label>
                    <div class="radio">
                        <label>
                            <input type="radio" name="groupOption" value="All" checked /> All Users
                        </label>
                    </div>
                    <div class="radio">
                        <label>
                            <input type="radio" name="groupOption" value="Department" /> Department
                        </label>
                        <div class="recipient-selector">
                            @Html.DropDownList("selectedDepartment", new SelectList((List<string>)ViewBag.Departments), "-- Select Department --", new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="radio">
                        <label>
                            <input type="radio" name="groupOption" value="Individual" /> Individual
                        </label>
                        <div class="recipient-selector">
                            @Html.DropDownListFor(m => m.RecipientId, (SelectList)ViewBag.Recipients, "-- Select Recipient --", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> Your message will be sent to all Admins and Owners.
                </div>
            }

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Send Message</button>
                <a href="@Url.Action("Index", "Message")" class="btn btn-secondary">Cancel</a>
            </div>
        }
    </div>
</div>

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-bib: #b17474; /* Neutral */
    }

    /* Page Header */
    .page-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
            margin-bottom: 5px;
        }

        .page-header p.lead {
            color: var(--color-soil);
            opacity: 0.8;
            margin-bottom: 0;
        }

    /* Card styling */
    .card {
        border: 1px solid var(--color-wheat);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        background-color: var(--color-white);
        padding: 25px;
    }

    /* Form styling */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: 500;
            color: var(--color-soil);
            display: block;
            margin-bottom: 5px;
        }

    .form-control {
        border: 1px solid var(--color-wheat);
        border-radius: 4px;
        padding: 8px 12px;
    }

        .form-control:focus {
            border-color: var(--color-earth);
            box-shadow: 0 0 0 0.2rem rgba(139, 115, 85, 0.25);
        }

    textarea.form-control {
        resize: vertical;
    }

    /* Radio button styling */
    .radio {
        margin: 10px 0;
        padding-left: 5px;
    }

        .radio label {
            font-weight: normal;
            display: inline;
            cursor: pointer;
        }

    /* Recipient selector styling */
    .recipient-section {
        background-color: rgba(245, 222, 179, 0.1);
        padding: 15px;
        border-radius: 6px;
        margin-top: 10px;
    }

    .recipient-selector {
        margin-left: 20px;
        margin-top: 5px;
        margin-bottom: 10px;
    }

    select.form-control {
        max-width: 300px;
    }

    /* Alert styling */
    .alert-info {
        background-color: rgba(245, 222, 179, 0.2);
        border-color: var(--color-wheat);
        color: var(--color-soil);
    }

    /* Button styling */
    .btn {
        padding: 8px 16px;
        border-radius: 4px;
    }

    .btn-primary {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
        color: var(--color-white);
    }

        .btn-primary:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: var(--color-white);
        margin-left: 10px;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
        }

    .mt-4 {
        margin-top: 1.5rem;
    }
</style>

<script>
    // Optional JavaScript to enhance the form (can be moved to an external file)
    document.addEventListener('DOMContentLoaded', function () {
        // Highlight the corresponding dropdown when radio is selected
        const radioButtons = document.querySelectorAll('input[name="groupOption"]');
        const dropdowns = document.querySelectorAll('.recipient-selector');

        // Initial state - hide dropdowns except for selected radio
        updateDropdowns();

        // Add change event listeners
        radioButtons.forEach(radio => {
            radio.addEventListener('change', updateDropdowns);
        });

        function updateDropdowns() {
            const selectedValue = document.querySelector('input[name="groupOption"]:checked').value;

            // Hide all dropdowns first
            dropdowns.forEach(dropdown => {
                dropdown.style.display = 'none';
            });

            // Show only the relevant dropdown
            if (selectedValue === 'Department') {
                document.querySelector('.radio input[value="Department"]')
                    .closest('.radio')
                    .querySelector('.recipient-selector').style.display = 'block';
            } else if (selectedValue === 'Individual') {
                document.querySelector('.radio input[value="Individual"]')
                    .closest('.radio')
                    .querySelector('.recipient-selector').style.display = 'block';
            }
        }
    });
</script>