@model FarmTrack.ViewModels.ReplyViewModel
@{
    ViewBag.Title = "Message Thread";
    var currentUserId = (int)Session["UserId"];
    if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout - User.cshtml";
    }
}

<div class="page-header">
    <h2>@Model.OriginalMessage.Subject</h2>
    <p class="lead">Conversation history</p>
</div>

<div class="message-container">
    <div class="thread-scrollable">
        @foreach (var message in Model.Replies)
        {
            <div class="message @(message.SenderId == currentUserId ? "sent" : "received")">
                <strong>@message.Sender.FullName</strong> <span class="timestamp">@message.SentAt</span>
                <p>@Html.Raw(HttpUtility.HtmlEncode(message.Body).Replace("\n", "<br />"))</p>
            </div>
        }
    </div>

    <div class="reply-fixed">
        @using (Html.BeginForm("Reply", "Message", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.NewReply.ConversationId)
            @Html.HiddenFor(m => m.NewReply.RecipientId)
            @Html.HiddenFor(m => m.NewReply.ReplyToMessageId)

            <div class="form-group">
                @Html.LabelFor(m => m.NewReply.Body)
                @Html.TextAreaFor(m => m.NewReply.Body, new { @class = "form-control", rows = 3 })
            </div>

            <button type="submit" class="btn btn-primary">Send Reply</button>
        }
    </div>
</div>


<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-bib: #b17474; /* Neutral */
    }

    /* Page Header */
    .page-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
            margin-bottom: 5px;
        }

        .page-header p.lead {
            color: var(--color-soil);
            opacity: 0.8;
            margin-bottom: 0;
        }

    /* Message Thread Styling */
    .thread {
        padding: 15px;
    }

    .message {
        padding: 12px 15px;
        margin-bottom: 15px;
        border-radius: 6px;
        position: relative;
    }

        .message strong {
            font-weight: 600;
            color: var(--color-soil);
        }

        .message .timestamp {
            font-size: 12px;
            color: #777;
            margin-left: 10px;
        }

        .message p {
            margin: 8px 0 0;
            line-height: 1.5;
        }

    /* Sent messages (by current user) */
    .sent {
        background-color: rgba(139, 115, 85, 0.1);
        border-left: 4px solid var(--color-earth);
        margin-left: 30px;
    }

    /* Received messages (from other users) */
    .received {
        background-color: rgba(245, 222, 179, 0.2);
        border-left: 4px solid var(--color-foliage);
        margin-right: 30px;
    }

    /* Card styling */
    .card {
        border: 1px solid var(--color-wheat);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
    }

    .card-header {
        background-color: var(--color-wheat);
        color: var(--color-soil);
        padding: 12px 20px;
    }

        .card-header h5 {
            font-weight: 600;
        }

    .card-body {
        background-color: var(--color-white);
        padding: 20px;
    }

    /* Form styling */
    .form-control {
        border: 1px solid var(--color-wheat);
        border-radius: 4px;
        padding: 8px 12px;
    }

        .form-control:focus {
            border-color: var(--color-earth);
            box-shadow: 0 0 0 0.2rem rgba(139, 115, 85, 0.25);
        }

    textarea.form-control {
        resize: vertical;
    }

    /* Button styling */
    .btn-primary {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
        color: var(--color-white);
    }

        .btn-primary:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .sent, .received {
            margin-left: 15px;
            margin-right: 15px;
        }
    }
    .message-container {
        display: flex;
        flex-direction: column;
        height: 80vh; /* Adjust as needed */
        border: 1px solid var(--color-wheat);
        border-radius: 6px;
        overflow: hidden;
    }

    .thread-scrollable {
        flex: 1;
        overflow-y: auto;
        padding: 20px;
        background-color: #fff;
    }

    .reply-fixed {
        padding: 15px 20px;
        background-color: var(--color-wheat);
        border-top: 1px solid var(--color-earth);
    }

        .reply-fixed .form-group {
            margin-bottom: 10px;
        }

</style>
<script>
    window.addEventListener("DOMContentLoaded", function () {
        var thread = document.querySelector(".thread-scrollable");
        if (thread) {
            thread.scrollTop = thread.scrollHeight;
        }
    });
</script>
