 @model IEnumerable<FarmTrack.Models.FarmTask>

@{
    ViewBag.Title = "Task List";
}
@if (TempData["CreateMessage"] != null)
{
    <div class="alert alert-success">@TempData["CreateMessage"]</div>
}

<style>
    /* Custom Color Scheme */
    :root {
        --color-earth: #8B7355; /* Primary */
        --color-soil: #654321; /* Secondary */
        --color-foliage: #4CAF50; /* Tertiary */
        --color-wheat: #F5DEB3; /* Accent */
        --color-danger: #FF6B6B; /* Error */
        --color-white: #FFFFFF; /* Neutral */
        --color-bib: #b17474; /* Neutral */
    }

    /* Page Header */
    .page-header {
        background-color: var(--color-wheat);
        padding: 20px;
        border-radius: 8px;
        margin-bottom: 20px;
    }

        .page-header h2 {
            color: var(--color-soil);
            font-weight: 700;
        }

        .page-header p.lead {
            color: var(--color-soil);
            opacity: 0.8;
        }

    /* Filter Section */
    .card {
        border: 1px solid var(--color-wheat);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    .card-body {
        background-color: var(--color-white);
    }

    .form-control {
        border: 1px solid var(--color-wheat);
    }

    .btn-primary {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
    }

        .btn-primary:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    /* Task Table */
    .table thead {
        background-color: var(--color-earth);
        color: var(--color-white);
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(245, 222, 179, 0.1);
    }

    .table-hover tbody tr:hover {
        background-color: rgba(245, 222, 179, 0.2);
    }

    /* Status Badges */
    .badge-success {
        background-color: var(--color-foliage);
        color: var(--color-white);
    }

    .badge-warning {
        background-color: var(--color-wheat);
        color: var(--color-soil);
    }

    .badge-secondary {
        background-color: var(--color-soil);
        color: var(--color-white);
    }

    .badge-danger {
        background-color: var(--color-danger);
        color: var(--color-white);
    }

    /* Action Buttons */
    .btn-info {
        background-color: var(--color-earth);
        border-color: var(--color-earth);
        color: var(--color-white);
    }

        .btn-info:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
        }

    .btn-warning {
        background-color: var(--color-wheat);
        border-color: var(--color-wheat);
        color: var(--color-soil);
    }

        .btn-warning:hover {
            background-color: var(--color-soil);
            border-color: var(--color-soil);
            color: var(--color-white);
        }

    .btn-danger {
        background-color: var(--color-danger);
        border-color: var(--color-danger);
    }

        .btn-danger:hover {
            background-color: var(--color-bib);
            border-color: var(--color-bib);
        }
</style>

<!-- Page Header -->
<div class="page-header">
    <h2>Task List</h2>
    <p class="lead">Manage and monitor all tasks efficiently.</p>
</div>

<!-- Create New Task Button -->
@if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
{

    <div class="d-flex justify-content-end mt-4">
        <a href="@Url.Action("Create", "Task")" class="btn btn-info mr-2">
            <i class="fas fa-plus"></i> Create New Task
        </a>
        <a href="@Url.Action("ViewStatusUpdates", "Task")" class="btn btn-warning">
            <i class="fas fa-tasks"></i> View Status Updates
        </a>
    </div>


}

<!-- Filter and Search Section -->
<div class="card mb-4">
    <div class="card-body">
        <form method="get" class="form-inline">
            <div class="form-group mr-3">
                <label for="department" class="mr-2">Department:</label>
                @Html.DropDownList("department", ViewBag.Departments as SelectList, "All", new { @class = "form-control" })
            </div>
            <div class="form-group mr-3">
                <label for="status" class="mr-2">Status:</label>
                @Html.DropDownList("status", ViewBag.Statuses as SelectList, "All", new { @class = "form-control" })
            </div>
            <div class="form-group mr-3">
                <label for="search" class="mr-2">Search:</label>
                <input type="text" name="search" class="form-control" placeholder="Search tasks..." value="@Request.QueryString["search"]" />
            </div>
            <button type="submit" class="btn btn-info"><i class="fas fa-filter"></i> Filter</button>
        </form>
    </div>
</div>

<!-- Task Table -->
<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>Title</th>
                <th>Assigned To</th>
                <th>Due Date</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model)
            {
                <tr class="clickable-row" data-href="@Url.Action("Details", "Task", new { id = task.TaskId })">
                    <td>@task.Title</td>
                    <td>@(task.AssignedUser?.FullName ?? task.AssignedDepartment ?? "All Employees")</td>
                    <td>@task.DueDate.ToShortDateString()</td>
                    <td>
                        @{
                            var badgeClass = task.Status == "Completed" ? "badge-success" :
                                            task.Status == "In Progress" ? "badge-warning" :
                                            task.Status == "Pending" ? "badge-secondary" : "badge-danger";
                        }
                        <span class="badge @badgeClass">@task.Status</span>
                    </td>
                    <td>
                        <a href="@Url.Action("Details", "Task", new { id = task.TaskId })" class="btn btn-info btn-sm">
                            <i class="fas fa-eye"></i>
                        </a>
                        @*@if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
                            {
                                <a href="@Url.Action("Edit", "Task", new { id = task.TaskId })" class="btn btn-warning btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Delete", "Task", new { id = task.TaskId })" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash"></i>
                                </a>
                            }*@
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Pagination -->
@if (ViewBag.PageCount > 1)
{
    <nav>
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= ViewBag.PageCount; i++)
            {
                <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                    <a class="page-link" href="?department=@Request.QueryString["department"]&status=@Request.QueryString["status"]&search=@Request.QueryString["search"]&page=@i">@i</a>
                </li>
            }
        </ul>
    </nav>
}

<!-- Create New Task Button -->
@if (Session["Role"] != null && (Session["Role"].ToString() == "Admin" || Session["Role"].ToString() == "Owner"))
{

    <div class="text-right mt-4">
        <a href="@Url.Action("Create", "Task")" class="btn btn-info">
            <i class="fas fa-plus"></i> Create New Task
        </a>
    </div>

}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let rows = document.querySelectorAll(".clickable-row");
        rows.forEach(row => {
            row.addEventListener("click", function () {
                let url = this.getAttribute("data-href");
                if (url) {
                    window.location.href = url;
                }
            });
        });
    });

</script>