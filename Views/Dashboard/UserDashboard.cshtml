@*@{
        ViewBag.Title = "User Dashboard";
    }
    <h2>User Dashboard</h2>

    <div>
        <h3>Your Tasks</h3>
        @if (ViewBag.UserTasks.Count == 0)
        {
            <p>You have no assigned tasks.</p>
        }
        else
        {
            <ul>
                @foreach (var task in ViewBag.UserTasks)
                {
                    <li>@task.Title - Due: @task.DueDate</li>
                }
            </ul>
        }
    </div>*@
@model FarmTrack.Models.UserDashboardViewModel

@{
    ViewBag.Title = "User Dashboard";
    Layout = "~/Views/Shared/_Layout - User.cshtml";
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

<style>
    :root {
        --color-earth: #8B7355;
        --color-soil: #654321;
        --color-foliage: #4CAF50;
        --color-wheat: #F5DEB3;
        --color-hay: #DAA520;
        --border-radius: 12px;
        --card-shadow: 0 6px 18px rgba(0,0,0,0.1);
    }

    .dashboard-wrapper {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .dashboard-grid {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 20px;
    }

    .card {
        background: white;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        overflow: hidden;
        transition: transform 0.2s, box-shadow 0.2s;
        height: 300px; /* Fixed height for cards */
        display: flex;
        flex-direction: column;
    }

    .card:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(0,0,0,0.15);
    }

    .card-header {
        padding: 15px 20px;
        border-bottom: 2px solid var(--color-wheat);
        background: var(--color-earth);
        color: white;
        flex-shrink: 0; /* Prevents shrinking */
    }

    .card-body {
        padding: 20px;
        flex-grow: 1;
        overflow-y: auto; /* Enables scrolling when content overflows */
    }

    .activities-card {
        grid-column: span 2;
        height: 300px; /* Set fixed height */
    }

    .simple-table {
        width: 100%;
        border-collapse: collapse;
    }

    .simple-table th {
        background-color: var(--color-wheat);
        color: var(--color-soil);
        padding: 12px 15px;
        text-align: left;
    }

    .simple-table td {
        padding: 10px 15px;
        border-bottom: 1px solid #eee;
    }

    .status-badge {
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
    }

    .status-pending {
        background-color: var(--color-wheat);
        color: var(--color-soil);
    }

    .status-progress {
        background-color: var(--color-hay);
        color: white;
    }

    .status-complete {
        background-color: var(--color-foliage);
        color: white;
    }

    .job-card {
        border-left: 4px solid var(--color-earth);
        padding: 15px;
        margin-bottom: 15px;
        border-radius: 4px;
        background-color: #f9f9f9;
    }

    .btn-apply {
        background-color: var(--color-earth);
        color: white;
        padding: 8px 16px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .btn-apply:hover {
        background-color: var(--color-hay);
    }

    @@media (max-width: 768px) {
        .dashboard-grid {
            grid-template-columns: 1fr;
        }

        .card {
            height: 250px; /* Adjust for smaller screens */
        }

        .stats-card {
            grid-column: span 1;
        }
    }

    .dashboard-buttons {
        display: flex;
        gap: 20px;
        margin-bottom: 25px;
        flex-wrap: wrap;
    }

    .btn-dashboard-link {
        flex: 1;
        min-width: 180px;
        text-align: center;
        padding: 15px;
        background-color: var(--color-earth); /* Changed from foliage to earth */
        color: white;
        font-weight: bold;
        text-decoration: none;
        border-radius: var(--border-radius);
        box-shadow: var(--card-shadow);
        transition: background-color 0.2s ease;
    }

    .btn-dashboard-link:hover {
        background-color: var(--color-wheat); /* Changed from hay to wheat */
        color: var(--color-soil); /* Added for better contrast on wheat background */
    }

    .quick-stats {
        display: flex;
        justify-content: space-between;
        align-items: center;
        text-align: center;
        gap: 10px;
    }

    .quick-stats div {
        flex: 1;
        padding: 10px;
    }

    .quick-stats i {
        font-size: 28px;
        color: var(--color-earth);
    }

    .quick-stats h4 {
        margin: 10px 0 5px;
        font-size: 24px;
    }

    /* Fixed the stats card layout */
    .stats-card {
        grid-column: span 2; /* Make it span the full width */
        height: auto; /* Auto height instead of fixed */
        min-height: 150px; /* Minimum height */
    }

    .badge {
        position: absolute;
        top: 5px;
        right: 15px;
        background-color: red;
        color: white;
        font-size: 0.75rem;
        padding: 2px 6px;
        border-radius: 50%;
        font-weight: bold;
    }
</style>

<div class="dashboard-wrapper">
    <div class="dashboard-buttons">
        <a href="@Url.Action("MyApplication", "Jobs")" class="btn-dashboard-link">
            <i class="fas fa-file-alt"></i> My Applications
        </a>
        <a href="@Url.Action("Inbox", "Message")" class="btn-dashboard-link">
            <i class="fas fa-envelope"></i> Inbox
        </a>
        <a href="@Url.Action("Index", "Jobs")" class="btn-dashboard-link">
            <i class="fas fa-briefcase"></i> Job Listings
        </a>
    </div>

    <div class="dashboard-grid">
        <a href="@Url.Action("MyTask", "Task")" style="text-decoration: none; color: inherit;">
            <!-- Tasks Card -->
            <div class="card">
                <div class="card-header">
                    <h3>Your Tasks</h3>
                </div>
                <div class="card-body">
                    @if (Model.AssignedTasks == null || Model.AssignedTasks.Count == 0)
                {
                    <p>No tasks assigned.</p>
                }
                else
                {
                    <table class="simple-table">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Due Date</th>
                                <th>Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in Model.AssignedTasks)
                            {
                            <tr class="clickable-row" data-href="@Url.Action("Details", "Task", new { id = task.TaskId })">
                                <td>@task.Title</td>
                                <td>@task.DueDate.ToString("yyyy-MM-dd")</td>
                                <td>
                                    @{
                                            string statusClass = "status-pending";
                                            if (task.Status == "In Progress") { statusClass = "status-progress"; }
                                            else if (task.Status == "Completed") { statusClass = "status-complete"; }
                                    }
                                    <span class="status-badge @statusClass">@task.Status</span>
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                }
                </div>
            </div>
        </a>

            <!-- Jobs Card -->
            <div class="card">
                <div class="card-header">
                    <h3>Available Jobs</h3>
                </div>
                <div class="card-body">
                    @if (Model.Job == null || Model.Job.Count == 0)
                {
                    <p>No jobs available.</p>
                }
                else
                {
                    foreach (var job in Model.Job)
                    {
                    <div class="job-card">
                        <h4>@job.Title</h4>
                        <p>@job.Description</p>
                        <small>Posted: @job.DatePosted.ToString("yyyy-MM-dd")</small>
                        <form method="post" action="@Url.Action("Apply", "Jobs")">
                            <input type="hidden" name="jobId" value="@job.JobId" />
                            <button type="submit" class="btn-apply">Apply</button>
                        </form>
                    </div>
                    }
                }
                </div>
            </div>

            <!-- Quick Stats Card - Full Width -->
            <div class="card stats-card">
                <div class="card-header">
                    <h3>Quick Stats</h3>
                </div>
                <div class="card-body quick-stats">
                    <div class="stat-box">
                        <i class="fas fa-tasks"></i>
                        <h4>@(Model.AssignedTasks?.Count ?? 0)</h4>
                        <p>Tasks Assigned</p>
                        @if ((Model.AssignedTasks?.Count ?? 0) > 0)
                    {
                        <span class="badge">@Model.AssignedTasks.Count</span>
                    }
                    </div>
                    <div class="stat-box">
                        <i class="fas fa-paper-plane"></i>
                        <h4>@Model.JobApplicationsCount</h4>
                        <p>Applications Sent</p>
                        @if (Model.JobApplicationsCount > 0)
                    {
                        <span class="badge">@Model.JobApplicationsCount</span>
                    }
                    </div>
                    <div class="stat-box">
                        <i class="fas fa-inbox"></i>
                        <h4>@Model.MessagesCount</h4>
                        <p>Inbox Messages</p>
                        @if (Model.MessagesCount > 0)
                    {
                        <span class="badge">@Model.MessagesCount</span>
                    }
                    </div>
                </div>

            </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        let rows = document.querySelectorAll(".clickable-row");
        rows.forEach(row => {
            row.addEventListener("click", function () {
                let url = this.getAttribute("data-href");
                if (url) {
                    window.location.href = url;
                }
            });
        });
    });

</script>


@*
    <div class="row">
        <!-- Tasks Section -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5>Tasks Assigned to You or Your Department</h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.Tasks != null && ViewBag.Tasks.Any())
                    {
                        <ul class="list-group">
                            @foreach (var task in ViewBag.Tasks)
                            {
                                <li class="list-group-item">
                                    <strong>@task.Title</strong> - @task.Description
                                    <div><small>Assigned To: @task.AssignedUser?.FullName ?? "Department Task"</small></div>
                                    <div><small>Due Date: @task.DueDate.ToString("dd MMM yyyy")</small></div>
                                    <div><small>Status: @task.Status</small></div>
                                    @if (task.IsRecurring)
                                    {
                                        <div><small>Recurrence: @task.RecurrenceType</small></div>
                                    }
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No tasks assigned to you or your department.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Jobs Section (This is for jobs, similar to tasks) -->
        <div class="col-md-6">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5>Available Jobs</h5>
                </div>
                <div class="card-body">
                    @if (ViewBag.Jobs != null && ViewBag.Jobs.Any())
                    {
                        <ul class="list-group">
                            @foreach (var job in ViewBag.Jobs)
                            {
                                <li class="list-group-item">
                                    <strong>@job.Title</strong>
                                    <p>@job.Description</p>
                                    <div><small>Posted On: @job.PostedDate.ToString("dd MMM yyyy")</small></div>
                                    <a href="@Url.Action("Details", "Job", new { id = job.JobId })" class="btn btn-info btn-sm">View Details</a>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p>No jobs available.</p>
                    }
                </div>
            </div>
        </div>
    </div>
*@


